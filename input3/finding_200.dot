// Finding: f0737f5c-d761-4e4b-a837-ce2ebfc6e788
// Finding.url: https://pl.example10.com/##"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('a8709cdf49244505878a9bd32aff90cb')><!--/*
// Finding.parentloc: https://pl.example10.com/##"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('a8709cdf49244505878a9bd32aff90cb')><!--/*
// Finding.domain: pl.example10.com
// Finding.base_domain: example10.com
// Finding.source: location.href
// Finding.sink: innerHTML
// Sanitizer.score: 7
// Sanitizer.name: urlFormat
// Sanitizer.location: https://webst.example10.com/_js/router.js?9fa8027c1abe861a0528 - urlFormat:1:444651
// Finding.begin: 2655
// Finding.end: 2656
// Finding.original_uuid: e4605c5c-9029-4f10-9fe7-3e1dc254b89c
// Finding.TwentyFiveMillionFlowsId: 1429751567
// Finding.script: https://webst.example10.com/_js/vendors.js?9fa8027c1abe861a0528
// Finding.line: 2
// Exploit.uuid: a8709cdf-4924-4505-878a-9bd32aff90cb
// Exploit.success: false
// Exploit.status: validated
// Exploit.method: C
// Exploit.type: html
// Exploit.token: attribute
// Exploit.content: href
// Exploit.quote_type: "
// Exploit.tag: a
// Exploit.break_out: #"></iframe></style></script></object></embed></textarea><img src=x onerror=
// Exploit.break_in: ><!--/*
// Exploit.payload: #"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog(1)><!--/*
// Exploit.begin_taint_url: 6
// Exploit.end_taint_url: 7
// Exploit.replace_begin_url: 29
// Exploit.replace_end_url: 29
// Exploit.replace_begin_param: 482
// Exploit.replace_end_param: 482
// Issues.LargestEncodeAttrStringChain: 0
// Issues.LargestTextFragmentEncodeChainLength: 0
// Issues.HasApproximation: false
// Issues.HasMissingImplementation: false
// Issues.HasInfiniteRegexWithFunctionReplacer: false
// Issues.MergedSplitAndJoins: true
// Issues.HasUrlInRhsOfReplace: false
// Issues.HasUrlInLhsOfReplace: false
// Issues.HasCookieValueInLhsOfreplace: false
// Issues.HasCookieValueInRhsOfreplace: false
// Issues.HasCookieValueInMatchPattern: false
// Issues.HasCookieValueInExecPattern: false
// Issues.RemovedLRConcats: true
// Issues.RemovedReplaceArtifacts: false
// Issues.HasUrlInMatchPattern: false
// Issues.HasUrlInExecPattern: false
// Issues.RemovedNOPreplaces: false
// Issues.Known_sanitizer: false
// DepGraph.hash: -1928656604
// DepGraph.sanitizer_hash: -663250841
// Merged split and join statements 
// Merged split and join statements 
// Merged split and join statements 
// Merged split and join statements 
// Merged split and join statements 
// Removed LR concats 
digraph cfg {
n0 [shape=house, label="Input: x"];
n1 [shape=ellipse, label="split"];
n2 [shape=box, label="Lit: #"];
n3 [shape=box, label="Var: x"];
n4 [shape=ellipse, label="preg_replace"];
n5 [shape=box, label="RegExp: /\\/"];
n6 [shape=box, label="Lit: /"];
n7 [shape=box, label="Var: x"];
n8 [shape=ellipse, label="."];
n9 [shape=box, label="Lit: #"];
n10 [shape=ellipse, label="."];
n11 [shape=box, label="Lit: #"];
n12 [shape=ellipse, label="trim"];
n13 [shape=box, label="Var: x"];
n14 [shape=ellipse, label="substr"];
n15 [shape=box, label="Var: x"];
n16 [shape=box, label="Lit: 6"];
n17 [shape=ellipse, label="substr"];
n18 [shape=box, label="Var: x"];
n19 [shape=box, label="Lit: 2"];
n20 [shape=ellipse, label="substr"];
n21 [shape=box, label="Var: x"];
n22 [shape=box, label="Lit: 20"];
n23 [shape=ellipse, label="preg_replace"];
n24 [shape=box, label="RegExp: /[']/"];
n25 [shape=box, label="Lit: %27"];
n26 [shape=box, label="Var: x"];
n27 [shape=ellipse, label="preg_replace"];
n28 [shape=box, label="RegExp: /[<]/"];
n29 [shape=box, label="Lit: %3C"];
n30 [shape=box, label="Var: x"];
n31 [shape=ellipse, label="preg_replace"];
n32 [shape=box, label="RegExp: /[>]/"];
n33 [shape=box, label="Lit: %3E"];
n34 [shape=box, label="Var: x"];
n35 [shape=ellipse, label="preg_replace"];
n36 [shape=box, label="RegExp: /["]/"];
n37 [shape=box, label="Lit: %22"];
n38 [shape=box, label="Var: x"];
n39 [shape=ellipse, label="preg_replace"];
n40 [shape=box, label="RegExp: /[ ]/"];
n41 [shape=box, label="Lit: %20"];
n42 [shape=box, label="Var: x"];
n43 [shape=ellipse, label="substr"];
n44 [shape=box, label="Var: x"];
n45 [shape=box, label="Lit: 0"];
n46 [shape=box, label="Lit: 1"];
n47 [shape=ellipse, label="str_replace_once"];
n48 [shape=box, label="Lit: null"];
n49 [shape=box, label="Lit: "];
n50 [shape=box, label="Var: x"];
n51 [shape=ellipse, label="preg_replace"];
n52 [shape=box, label="RegExp: /[?]/"];
n53 [shape=box, label="Lit: %3F"];
n54 [shape=box, label="Var: x"];
n55 [shape=ellipse, label="preg_replace"];
n56 [shape=box, label="RegExp: /[#]/"];
n57 [shape=box, label="Lit: %23"];
n58 [shape=box, label="Var: x"];
n59 [shape=ellipse, label="."];
n60 [shape=box, label="Lit: https://jp.example10.com"];
n61 [shape=ellipse, label="preg_replace"];
n62 [shape=box, label="RegExp: /=((&)|$)/"];
n63 [shape=box, label="Lit: $2"];
n64 [shape=box, label="Var: x"];
n65 [shape=box, label="Var: x"];
n66 [shape=doubleoctagon, label="Return: x"];
n3 -> n0;
n1 -> n2;
n1 -> n3;
n7 -> n1;
n4 -> n5;
n4 -> n6;
n4 -> n7;
n8 -> n9;
n8 -> n4;
n10 -> n8;
n10 -> n11;
n13 -> n10;
n12 -> n13;
n15 -> n12;
n14 -> n15;
n14 -> n16;
n18 -> n14;
n17 -> n18;
n17 -> n19;
n21 -> n17;
n20 -> n21;
n20 -> n22;
n26 -> n20;
n23 -> n24;
n23 -> n25;
n23 -> n26;
n30 -> n23;
n27 -> n28;
n27 -> n29;
n27 -> n30;
n34 -> n27;
n31 -> n32;
n31 -> n33;
n31 -> n34;
n38 -> n31;
n35 -> n36;
n35 -> n37;
n35 -> n38;
n42 -> n35;
n39 -> n40;
n39 -> n41;
n39 -> n42;
n44 -> n39;
n43 -> n44;
n43 -> n45;
n43 -> n46;
n50 -> n43;
n47 -> n48;
n47 -> n49;
n47 -> n50;
n54 -> n47;
n51 -> n52;
n51 -> n53;
n51 -> n54;
n58 -> n51;
n55 -> n56;
n55 -> n57;
n55 -> n58;
n59 -> n60;
n59 -> n55;
n64 -> n59;
n61 -> n62;
n61 -> n63;
n61 -> n64;
n65 -> n61;
n66 -> n65;
}