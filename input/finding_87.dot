// Finding: c2630b5d-60dc-4764-b6f5-9f4370dddc97
// Finding.url: http://w3.example17.com/cs/customerNoticeNew.do?cmd=view&page=1&board_no=46"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('7bf90581a83a4924960950d1a4935288')><!--/*
// Finding.parentloc: http://w3.example17.com/cs/customerNoticeNew.do?cmd=view&page=1&board_no=46"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('7bf90581a83a4924960950d1a4935288')><!--/*
// Finding.domain: w3.example17.com
// Finding.base_domain: example17.com
// Finding.source: location.search
// Finding.sink: innerHTML
// Sanitizer.score: 4
// Sanitizer.name: <synthetic>
// Sanitizer.location: example18.com
// Finding.begin: 8469
// Finding.end: 8470
// Finding.original_uuid: cfa24b0d-5e49-4f73-a58b-2f15f8335d84
// Finding.TwentyFiveMillionFlowsId: 86709930
// Finding.script: http://sjmj8n.example17.com/jquery/1.10.2.min.js
// Finding.line: 5
// Exploit.uuid: 7bf90581-a83a-4924-9609-50d1a4935288
// Exploit.success: false
// Exploit.status: validated
// Exploit.method: C
// Exploit.type: html
// Exploit.token: attribute
// Exploit.content: data-board-no
// Exploit.quote_type: "
// Exploit.tag: a
// Exploit.break_out: 46"></iframe></style></script></object></embed></textarea><img src=x onerror=
// Exploit.break_in: ><!--/*
// Exploit.payload: 46"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog(1)><!--/*
// Exploit.begin_taint_url: 69
// Exploit.end_taint_url: 71
// Exploit.replace_begin_url: 69
// Exploit.replace_end_url: 71
// Exploit.replace_begin_param: 9005
// Exploit.replace_end_param: 9007
// Issues.LargestEncodeAttrStringChain: 0
// Issues.LargestTextFragmentEncodeChainLength: 0
// Issues.HasApproximation: false
// Issues.HasMissingImplementation: false
// Issues.HasInfiniteRegexWithFunctionReplacer: false
// Issues.MergedSplitAndJoins: true
// Issues.HasUrlInRhsOfReplace: false
// Issues.HasUrlInLhsOfReplace: false
// Issues.HasCookieValueInLhsOfreplace: false
// Issues.HasCookieValueInRhsOfreplace: false
// Issues.HasCookieValueInMatchPattern: false
// Issues.HasCookieValueInExecPattern: false
// Issues.RemovedLRConcats: true
// Issues.RemovedReplaceArtifacts: false
// Issues.HasUrlInMatchPattern: false
// Issues.HasUrlInExecPattern: false
// Issues.RemovedNOPreplaces: true
// Issues.Known_sanitizer: false
// DepGraph.hash: 513878198
// DepGraph.sanitizer_hash: 638625227
// Merged split and join statements 
// Merged split and join statements 
// Merged split and join statements 
// Removed LR concats 
// Removed LR concats 
// Removed LR concats 
// Removed NOP replaces 
digraph cfg {
n0 [shape=house, label="Input: x"];
n1 [shape=ellipse, label="str_replace_once"];
n2 [shape=box, label="RegExp: /board_no=((.*?)&|\S+)/"];
n3 [shape=box, label="Lit: "];
n4 [shape=box, label="Var: x"];
n5 [shape=ellipse, label="str_replace_once"];
n6 [shape=box, label="RegExp: /board_url=((.*?)&|\S+)/"];
n7 [shape=box, label="Lit: "];
n8 [shape=box, label="Var: x"];
n9 [shape=ellipse, label="str_replace_once"];
n10 [shape=box, label="RegExp: /page=((.*?)&|\d+)/"];
n11 [shape=box, label="Lit: "];
n12 [shape=box, label="Var: x"];
n13 [shape=ellipse, label="str_replace_once"];
n14 [shape=box, label="RegExp: /board_notice=((.*?)&|\S+)/"];
n15 [shape=box, label="Lit: "];
n16 [shape=box, label="Var: x"];
n17 [shape=ellipse, label="str_replace_once"];
n18 [shape=box, label="RegExp: /board_best=((.*?)&|\S+)/"];
n19 [shape=box, label="Lit: "];
n20 [shape=box, label="Var: x"];
n21 [shape=ellipse, label="str_replace_once"];
n22 [shape=box, label="RegExp: /board_ex_code=((.*?)&|\S+)/"];
n23 [shape=box, label="Lit: "];
n24 [shape=box, label="Var: x"];
n25 [shape=ellipse, label="str_replace_once"];
n26 [shape=box, label="RegExp: /board_type=((.*?)&|\S+)/"];
n27 [shape=box, label="Lit: "];
n28 [shape=box, label="Var: x"];
n29 [shape=ellipse, label="str_replace_once"];
n30 [shape=box, label="RegExp: /hashtag=((.*?)&|\S+)/"];
n31 [shape=box, label="Lit: "];
n32 [shape=box, label="Var: x"];
n33 [shape=ellipse, label="str_replace_once"];
n34 [shape=box, label="RegExp: /b.d=((.*?)&|\S+)/"];
n35 [shape=box, label="Lit: "];
n36 [shape=box, label="Var: x"];
n37 [shape=ellipse, label="str_replace_once"];
n38 [shape=box, label="RegExp: /\&$/"];
n39 [shape=box, label="Lit: "];
n40 [shape=box, label="Var: x"];
n41 [shape=ellipse, label="."];
n42 [shape=box, label="Lit: &page="];
n43 [shape=ellipse, label="."];
n44 [shape=box, label="Lit: 1"];
n45 [shape=ellipse, label="preg_replace"];
n46 [shape=box, label="RegExp: /[<]/"];
n47 [shape=box, label="Lit: &lt;"];
n48 [shape=box, label="Var: x"];
n49 [shape=ellipse, label="preg_replace"];
n50 [shape=box, label="RegExp: /[>]/"];
n51 [shape=box, label="Lit: &gt;"];
n52 [shape=box, label="Var: x"];
n53 [shape=ellipse, label="preg_replace"];
n54 [shape=box, label="RegExp: /[']/"];
n55 [shape=box, label="Lit: &#39;"];
n56 [shape=box, label="Var: x"];
n57 [shape=box, label="Var: x"];
n58 [shape=doubleoctagon, label="Return: x"];
n4 -> n0;
n1 -> n2;
n1 -> n3;
n1 -> n4;
n8 -> n1;
n5 -> n6;
n5 -> n7;
n5 -> n8;
n12 -> n5;
n9 -> n10;
n9 -> n11;
n9 -> n12;
n16 -> n9;
n13 -> n14;
n13 -> n15;
n13 -> n16;
n20 -> n13;
n17 -> n18;
n17 -> n19;
n17 -> n20;
n24 -> n17;
n21 -> n22;
n21 -> n23;
n21 -> n24;
n28 -> n21;
n25 -> n26;
n25 -> n27;
n25 -> n28;
n32 -> n25;
n29 -> n30;
n29 -> n31;
n29 -> n32;
n36 -> n29;
n33 -> n34;
n33 -> n35;
n33 -> n36;
n40 -> n33;
n37 -> n38;
n37 -> n39;
n37 -> n40;
n41 -> n37;
n41 -> n42;
n43 -> n41;
n43 -> n44;
n48 -> n43;
n45 -> n46;
n45 -> n47;
n45 -> n48;
n52 -> n45;
n49 -> n50;
n49 -> n51;
n49 -> n52;
n56 -> n49;
n53 -> n54;
n53 -> n55;
n53 -> n56;
n57 -> n53;
n58 -> n57;
}