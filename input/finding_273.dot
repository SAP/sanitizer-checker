// Finding: b37e161f-0b06-4028-8f74-0fa9ccc15ed5
// Finding.url: https://bizbank.example208.com/index.jsp?quick_link=73000000#|taintfoxLog('886bffb325ce4dd5aaa66129a7d400a0')//
// Finding.parentloc: https://bizbank.example208.com/index.jsp?quick_link=73000000#|taintfoxLog('886bffb325ce4dd5aaa66129a7d400a0')//
// Finding.domain: bizbank.example208.com
// Finding.base_domain: example208.com
// Finding.source: location.href
// Finding.sink: eval
// Sanitizer.score: 2
// Sanitizer.name: <synthetic>
// Sanitizer.location: example18.com
// Finding.begin: 21095
// Finding.end: 21101
// Finding.original_uuid: 93796e2e-161b-4910-88ac-7cd9d367757e
// Finding.TwentyFiveMillionFlowsId: 1579191279
// Finding.script: https://img.example208.com/biz/images/nexacro14lib/framework/Framework_20200406.js
// Finding.line: 1
// Exploit.uuid: 886bffb3-25ce-4dd5-aaa6-6129a7d400a0
// Exploit.success: false
// Exploit.status: validated
// Exploit.method: C
// Exploit.type: js
// Exploit.token: ExpressionStatement
// Exploit.content: undefined
// Exploit.quote_type: None
// Exploit.tag: None
// Exploit.break_out: |
// Exploit.break_in: //
// Exploit.payload: |taintfoxLog(1)//
// Exploit.begin_taint_url: 0
// Exploit.end_taint_url: 6
// Exploit.replace_begin_url: 57
// Exploit.replace_end_url: 57
// Exploit.replace_begin_param: 87599
// Exploit.replace_end_param: 87599
// Issues.LargestEncodeAttrStringChain: 0
// Issues.LargestTextFragmentEncodeChainLength: 0
// Issues.HasApproximation: false
// Issues.HasMissingImplementation: false
// Issues.HasInfiniteRegexWithFunctionReplacer: false
// Issues.MergedSplitAndJoins: true
// Issues.HasUrlInRhsOfReplace: false
// Issues.HasUrlInLhsOfReplace: false
// Issues.HasCookieValueInLhsOfreplace: false
// Issues.HasCookieValueInRhsOfreplace: false
// Issues.HasCookieValueInMatchPattern: false
// Issues.HasCookieValueInExecPattern: false
// Issues.RemovedLRConcats: false
// Issues.RemovedReplaceArtifacts: false
// Issues.HasUrlInMatchPattern: false
// Issues.HasUrlInExecPattern: false
// Issues.RemovedNOPreplaces: false
// Issues.Known_sanitizer: false
// DepGraph.hash: -1697860957
// DepGraph.sanitizer_hash: -281808833
// Merged split and join statements 
digraph cfg {
n0 [shape=house, label="Input: x"];
n1 [shape=ellipse, label="substr"];
n2 [shape=box, label="Var: x"];
n3 [shape=box, label="Lit: 0"];
n4 [shape=box, label="Lit: 108"];
n5 [shape=ellipse, label="preg_replace"];
n6 [shape=box, label="RegExp: /\\/"];
n7 [shape=box, label="Lit: /"];
n8 [shape=box, label="Var: x"];
n9 [shape=ellipse, label="."];
n10 [shape=box, label="Lit: BIZ2015.xadl.js"];
n11 [shape=ellipse, label="preg_replace"];
n12 [shape=box, label="RegExp: /\//"];
n13 [shape=box, label="Lit: /"];
n14 [shape=box, label="Var: x"];
n15 [shape=box, label="Var: x"];
n16 [shape=doubleoctagon, label="Return: x"];
n2 -> n0;
n1 -> n2;
n1 -> n3;
n1 -> n4;
n8 -> n1;
n5 -> n6;
n5 -> n7;
n5 -> n8;
n9 -> n5;
n9 -> n10;
n14 -> n9;
n11 -> n12;
n11 -> n13;
n11 -> n14;
n15 -> n11;
n16 -> n15;
}