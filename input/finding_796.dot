// Finding: 6aec2c48-e41d-4911-be13-2fd0eb466f5d
// Finding.url: https://www.example204.com/search.html?interestArea=P</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('7683ff54fafd418688cf65d7af455e6e')><!--/*&sort=recency
// Finding.parentloc: https://www.example204.com/search.html?interestArea=P</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('7683ff54fafd418688cf65d7af455e6e')><!--/*&sort=recency
// Finding.domain: www.example204.com
// Finding.base_domain: example204.com
// Finding.source: location.href
// Finding.sink: innerHTML
// Sanitizer.score: 14
// Sanitizer.name: y
// Sanitizer.location: https://www.example204.com/etc/clientlibs/dot-org/assets.min.js - y:616:56
// Finding.begin: 124
// Finding.end: 131
// Finding.original_uuid: cbee0cc1-6e31-48a2-99da-7ad70960cf09
// Finding.TwentyFiveMillionFlowsId: -1899331355
// Finding.script: https://www.example204.com/etc/clientlibs/dot-org/assets.min.js
// Finding.line: 819
// Exploit.uuid: 7683ff54-fafd-4186-88cf-65d7af455e6e
// Exploit.success: true
// Exploit.status: validated
// Exploit.method: C
// Exploit.type: html
// Exploit.token: text
// Exploit.content: P
// Exploit.quote_type: None
// Exploit.tag: None
// Exploit.break_out: P</iframe></style></script></object></embed></textarea><img src=x onerror=
// Exploit.break_in: ><!--/*
// Exploit.payload: P</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog(1)><!--/*
// Exploit.begin_taint_url: 47
// Exploit.end_taint_url: 52
// Exploit.replace_begin_url: 47
// Exploit.replace_end_url: 52
// Exploit.replace_begin_param: 133
// Exploit.replace_end_param: 138
// Issues.LargestEncodeAttrStringChain: 0
// Issues.LargestTextFragmentEncodeChainLength: 0
// Issues.HasApproximation: false
// Issues.HasMissingImplementation: false
// Issues.HasInfiniteRegexWithFunctionReplacer: false
// Issues.MergedSplitAndJoins: false
// Issues.HasUrlInRhsOfReplace: false
// Issues.HasUrlInLhsOfReplace: false
// Issues.HasCookieValueInLhsOfreplace: false
// Issues.HasCookieValueInRhsOfreplace: false
// Issues.HasCookieValueInMatchPattern: false
// Issues.HasCookieValueInExecPattern: false
// Issues.RemovedLRConcats: true
// Issues.RemovedReplaceArtifacts: false
// Issues.HasUrlInMatchPattern: false
// Issues.HasUrlInExecPattern: false
// Issues.RemovedNOPreplaces: false
// Issues.Known_sanitizer: false
// DepGraph.hash: -772891896
// DepGraph.sanitizer_hash: -1019648210
// Removed LR concats 
digraph cfg {
n0 [shape=house, label="Input: x"];
n1 [shape=ellipse, label="substr"];
n2 [shape=box, label="Var: x"];
n3 [shape=box, label="Lit: 34"];
n4 [shape=ellipse, label="preg_replace"];
n5 [shape=box, label="RegExp: /&+/"];
n6 [shape=box, label="Lit: &"];
n7 [shape=box, label="Var: x"];
n8 [shape=ellipse, label="preg_replace"];
n9 [shape=box, label="RegExp: /^\?*&*|&+$/"];
n10 [shape=box, label="Lit: "];
n11 [shape=box, label="Var: x"];
n12 [shape=ellipse, label="split"];
n13 [shape=box, label="Lit: &"];
n14 [shape=box, label="Var: x"];
n15 [shape=ellipse, label="split"];
n16 [shape=box, label="Lit: ="];
n17 [shape=box, label="Var: x"];
n18 [shape=ellipse, label="preg_replace"];
n19 [shape=box, label="RegExp: /\+/"];
n20 [shape=box, label="Lit: %20"];
n21 [shape=box, label="Var: x"];
n22 [shape=ellipse, label="decodeURIComponent"];
n23 [shape=box, label="Var: x"];
n24 [shape=ellipse, label="encodeURIComponent"];
n25 [shape=box, label="Var: x"];
n26 [shape=ellipse, label="preg_replace"];
n27 [shape=box, label="RegExp: /[!]/"];
n28 [shape=box, label="Lit: %21"];
n29 [shape=box, label="Var: x"];
n30 [shape=ellipse, label="preg_replace"];
n31 [shape=box, label="RegExp: /[*]/"];
n32 [shape=box, label="Lit: *"];
n33 [shape=box, label="Var: x"];
n34 [shape=ellipse, label="preg_replace"];
n35 [shape=box, label="RegExp: /[']/"];
n36 [shape=box, label="Lit: %27"];
n37 [shape=box, label="Var: x"];
n38 [shape=ellipse, label="preg_replace"];
n39 [shape=box, label="RegExp: /[)]/"];
n40 [shape=box, label="Lit: %29"];
n41 [shape=box, label="Var: x"];
n42 [shape=ellipse, label="preg_replace"];
n43 [shape=box, label="RegExp: /[(]/"];
n44 [shape=box, label="Lit: %28"];
n45 [shape=box, label="Var: x"];
n46 [shape=ellipse, label="preg_replace"];
n47 [shape=box, label="RegExp: /\*/"];
n48 [shape=box, label="Lit: %2A"];
n49 [shape=box, label="Var: x"];
n50 [shape=ellipse, label="preg_replace"];
n51 [shape=box, label="RegExp: /%20/"];
n52 [shape=box, label="Lit: +"];
n53 [shape=box, label="Var: x"];
n54 [shape=ellipse, label="."];
n55 [shape=box, label="Lit: ="];
n56 [shape=ellipse, label="."];
n57 [shape=box, label="Lit: sort"];
n58 [shape=ellipse, label="."];
n59 [shape=box, label="Lit: &"];
n60 [shape=ellipse, label="substr"];
n61 [shape=box, label="Var: x"];
n62 [shape=box, label="Lit: 1"];
n63 [shape=ellipse, label="preg_replace"];
n64 [shape=box, label="RegExp: /&+/"];
n65 [shape=box, label="Lit: &"];
n66 [shape=box, label="Var: x"];
n67 [shape=ellipse, label="preg_replace"];
n68 [shape=box, label="RegExp: /^\?*&*|&+$/"];
n69 [shape=box, label="Lit: "];
n70 [shape=box, label="Var: x"];
n71 [shape=ellipse, label="split"];
n72 [shape=box, label="Lit: ="];
n73 [shape=box, label="Var: x"];
n74 [shape=ellipse, label="preg_replace"];
n75 [shape=box, label="RegExp: /\+/"];
n76 [shape=box, label="Lit: %20"];
n77 [shape=box, label="Var: x"];
n78 [shape=ellipse, label="decodeURIComponent"];
n79 [shape=box, label="Var: x"];
n80 [shape=ellipse, label="encodeURIComponent"];
n81 [shape=box, label="Var: x"];
n82 [shape=ellipse, label="preg_replace"];
n83 [shape=box, label="RegExp: /[!]/"];
n84 [shape=box, label="Lit: %21"];
n85 [shape=box, label="Var: x"];
n86 [shape=ellipse, label="preg_replace"];
n87 [shape=box, label="RegExp: /[*]/"];
n88 [shape=box, label="Lit: *"];
n89 [shape=box, label="Var: x"];
n90 [shape=ellipse, label="preg_replace"];
n91 [shape=box, label="RegExp: /[']/"];
n92 [shape=box, label="Lit: %27"];
n93 [shape=box, label="Var: x"];
n94 [shape=ellipse, label="preg_replace"];
n95 [shape=box, label="RegExp: /[)]/"];
n96 [shape=box, label="Lit: %29"];
n97 [shape=box, label="Var: x"];
n98 [shape=ellipse, label="preg_replace"];
n99 [shape=box, label="RegExp: /[(]/"];
n100 [shape=box, label="Lit: %28"];
n101 [shape=box, label="Var: x"];
n102 [shape=ellipse, label="preg_replace"];
n103 [shape=box, label="RegExp: /\*/"];
n104 [shape=box, label="Lit: %2A"];
n105 [shape=box, label="Var: x"];
n106 [shape=box, label="Var: x"];
n107 [shape=doubleoctagon, label="Return: x"];
n2 -> n0;
n1 -> n2;
n1 -> n3;
n7 -> n1;
n4 -> n5;
n4 -> n6;
n4 -> n7;
n11 -> n4;
n8 -> n9;
n8 -> n10;
n8 -> n11;
n14 -> n8;
n12 -> n13;
n12 -> n14;
n17 -> n12;
n15 -> n16;
n15 -> n17;
n21 -> n15;
n18 -> n19;
n18 -> n20;
n18 -> n21;
n23 -> n18;
n22 -> n23;
n25 -> n22;
n24 -> n25;
n29 -> n24;
n26 -> n27;
n26 -> n28;
n26 -> n29;
n33 -> n26;
n30 -> n31;
n30 -> n32;
n30 -> n33;
n37 -> n30;
n34 -> n35;
n34 -> n36;
n34 -> n37;
n41 -> n34;
n38 -> n39;
n38 -> n40;
n38 -> n41;
n45 -> n38;
n42 -> n43;
n42 -> n44;
n42 -> n45;
n49 -> n42;
n46 -> n47;
n46 -> n48;
n46 -> n49;
n53 -> n46;
n50 -> n51;
n50 -> n52;
n50 -> n53;
n54 -> n55;
n54 -> n50;
n56 -> n57;
n56 -> n54;
n58 -> n59;
n58 -> n56;
n61 -> n58;
n60 -> n61;
n60 -> n62;
n66 -> n60;
n63 -> n64;
n63 -> n65;
n63 -> n66;
n70 -> n63;
n67 -> n68;
n67 -> n69;
n67 -> n70;
n73 -> n67;
n71 -> n72;
n71 -> n73;
n77 -> n71;
n74 -> n75;
n74 -> n76;
n74 -> n77;
n79 -> n74;
n78 -> n79;
n81 -> n78;
n80 -> n81;
n85 -> n80;
n82 -> n83;
n82 -> n84;
n82 -> n85;
n89 -> n82;
n86 -> n87;
n86 -> n88;
n86 -> n89;
n93 -> n86;
n90 -> n91;
n90 -> n92;
n90 -> n93;
n97 -> n90;
n94 -> n95;
n94 -> n96;
n94 -> n97;
n101 -> n94;
n98 -> n99;
n98 -> n100;
n98 -> n101;
n105 -> n98;
n102 -> n103;
n102 -> n104;
n102 -> n105;
n106 -> n102;
n107 -> n106;
}