// Finding: 6bf95109-8df8-4e0b-8e80-3d6139d7e0a8
// Finding.url: https://www.example78.com/resources?type[0]=eBook##"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('0e56e784d181491683ecbf86efad4bc7')><!--/*
// Finding.parentloc: https://www.example78.com/resources?type[0]=eBook##"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('0e56e784d181491683ecbf86efad4bc7')><!--/*
// Finding.domain: www.example78.com
// Finding.base_domain: example78.com
// Finding.source: location.hash
// Finding.sink: innerHTML
// Sanitizer.score: 6
// Sanitizer.name: ve
// Sanitizer.location: https://cdn.example79.com/npm/instantsearch.js@4.8.3/dist/instantsearch.production.min.js - ve:2:58464
// Finding.begin: 303
// Finding.end: 308
// Finding.original_uuid: 17fa08e9-3d85-450e-80da-e192cbe9d79a
// Finding.TwentyFiveMillionFlowsId: 984389114
// Finding.script: https://cdn.example79.com/npm/instantsearch.js@4.8.3/dist/instantsearch.production.min.js
// Finding.line: 2
// Exploit.uuid: 0e56e784-d181-4916-83ec-bf86efad4bc7
// Exploit.success: false
// Exploit.status: validated
// Exploit.method: C
// Exploit.type: html
// Exploit.token: attribute
// Exploit.content: href
// Exploit.quote_type: "
// Exploit.tag: a
// Exploit.break_out: #"></iframe></style></script></object></embed></textarea><img src=x onerror=
// Exploit.break_in: ><!--/*
// Exploit.payload: #"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog(1)><!--/*
// Exploit.begin_taint_url: 18
// Exploit.end_taint_url: 19
// Exploit.replace_begin_url: 49
// Exploit.replace_end_url: 49
// Exploit.replace_begin_param: 58
// Exploit.replace_end_param: 58
// Issues.LargestEncodeAttrStringChain: 0
// Issues.LargestTextFragmentEncodeChainLength: 0
// Issues.HasApproximation: true
// Issues.HasMissingImplementation: false
// Issues.HasInfiniteRegexWithFunctionReplacer: true
// Issues.MergedSplitAndJoins: false
// Issues.HasUrlInRhsOfReplace: false
// Issues.HasUrlInLhsOfReplace: false
// Issues.HasCookieValueInLhsOfreplace: false
// Issues.HasCookieValueInRhsOfreplace: false
// Issues.HasCookieValueInMatchPattern: false
// Issues.HasCookieValueInExecPattern: false
// Issues.RemovedLRConcats: true
// Issues.RemovedReplaceArtifacts: false
// Issues.HasUrlInMatchPattern: false
// Issues.HasUrlInExecPattern: false
// Issues.RemovedNOPreplaces: false
// Issues.Known_sanitizer: false
// DepGraph.hash: -997872388
// DepGraph.sanitizer_hash: 2083955322
// Removed LR concats 
// Removed LR concats 
// Removed LR concats 
// Removed LR concats 
// Removed LR concats 
// Removed LR concats 
// Removed LR concats 
// Non Finite Regex with function on rhs:  replace([ \n\r\t\f\xA0]+/g: 1, s: 0, u: 0, m: 0, i: 0 [escapes( : 1), function_rhs: true], 'function(e){return e.replace(/(^|\xA0+)[^\xA0]+/g,"$1 ")}') - Left hand side has to be a range 
// Approximated Implementation for:  replace([ \n\r\t\f\xA0]+/g: 1, s: 0, u: 0, m: 0, i: 0 [escapes( : 1), function_rhs: true], 'function(e){return e.replace(/(^|\xA0+)[^\xA0]+/g,"$1 ")}') - Left hand side has to be a range 
digraph cfg {
n0 [shape=house, label="Input: x"];
n1 [shape=ellipse, label="preg_replace"];
n2 [shape=box, label="RegExp: /[&]/"];
n3 [shape=box, label="Lit: &amp;"];
n4 [shape=box, label="Var: x"];
n5 [shape=ellipse, label="preg_replace"];
n6 [shape=box, label="RegExp: /[<]/"];
n7 [shape=box, label="Lit: &lt;"];
n8 [shape=box, label="Var: x"];
n9 [shape=ellipse, label="preg_replace"];
n10 [shape=box, label="RegExp: /[>]/"];
n11 [shape=box, label="Lit: &gt;"];
n12 [shape=box, label="Var: x"];
n13 [shape=ellipse, label="preg_replace"];
n14 [shape=box, label="RegExp: /\'/"];
n15 [shape=box, label="Lit: &#39;"];
n16 [shape=box, label="Var: x"];
n17 [shape=ellipse, label="preg_replace"];
n18 [shape=box, label="RegExp: /\"/"];
n19 [shape=box, label="Lit: &quot;"];
n20 [shape=box, label="Var: x"];
n21 [shape=ellipse, label="."];
n22 [shape=box, label="Lit: <a href=""];
n23 [shape=ellipse, label="."];
n24 [shape=box, label="Lit: " class="ais-RefinementList-link "];
n25 [shape=ellipse, label="."];
n26 [shape=box, label="Lit:  "];
n27 [shape=ellipse, label="."];
n28 [shape=box, label="Lit: ">                  <span class="ais-RefinementList-checkbox "];
n29 [shape=ellipse, label="."];
n30 [shape=box, label="Lit: "></span>                  <span class="ais-RefinementList-label">"];
n31 [shape=ellipse, label="."];
n32 [shape=box, label="Lit: Manufacturing &amp; Prototyping"];
n33 [shape=ellipse, label="."];
n34 [shape=box, label="Lit: </span>                  <span class="ais-RefinementList-count">"];
n35 [shape=ellipse, label="."];
n36 [shape=box, label="Lit: 18"];
n37 [shape=ellipse, label="."];
n38 [shape=box, label="Lit: </span>                </a>"];
n39 [shape=ellipse, label="."];
n40 [shape=box, label="Lit:  "];
n41 [shape=ellipse, label="."];
n42 [shape=box, label="Lit: class="ais-RefinementList-link "];
n43 [shape=ellipse, label="."];
n44 [shape=box, label="Lit: "> "];
n45 [shape=ellipse, label="."];
n46 [shape=box, label="Lit: <span "];
n47 [shape=ellipse, label="."];
n48 [shape=box, label="Lit: class="ais-RefinementList-checkbox "];
n49 [shape=ellipse, label="."];
n50 [shape=box, label="Lit: "></span> "];
n51 [shape=ellipse, label="."];
n52 [shape=box, label="Lit: <span "];
n53 [shape=ellipse, label="."];
n54 [shape=box, label="Lit: class="ais-RefinementList-label">Manufacturing "];
n55 [shape=ellipse, label="."];
n56 [shape=box, label="Lit: &amp; "];
n57 [shape=ellipse, label="."];
n58 [shape=box, label="Lit: Prototyping</span> "];
n59 [shape=ellipse, label="."];
n60 [shape=box, label="Lit: <span "];
n61 [shape=ellipse, label="."];
n62 [shape=box, label="Lit: class="ais-RefinementList-count">18</span> "];
n63 [shape=ellipse, label="."];
n64 [shape=box, label="Lit: </a>"];
n65 [shape=ellipse, label="preg_replace"];
n66 [shape=box, label="RegExp: /[ \n\r\t\f\xA0]+/"];
n67 [shape=box, label="Lit: "];
n68 [shape=box, label="Var: x"];
n69 [shape=ellipse, label="trim"];
n70 [shape=box, label="Var: x"];
n71 [shape=box, label="Var: x"];
n72 [shape=doubleoctagon, label="Return: x"];
n4 -> n0;
n1 -> n2;
n1 -> n3;
n1 -> n4;
n8 -> n1;
n5 -> n6;
n5 -> n7;
n5 -> n8;
n12 -> n5;
n9 -> n10;
n9 -> n11;
n9 -> n12;
n16 -> n9;
n13 -> n14;
n13 -> n15;
n13 -> n16;
n20 -> n13;
n17 -> n18;
n17 -> n19;
n17 -> n20;
n21 -> n22;
n21 -> n17;
n23 -> n21;
n23 -> n24;
n25 -> n23;
n25 -> n26;
n27 -> n25;
n27 -> n28;
n29 -> n27;
n29 -> n30;
n31 -> n29;
n31 -> n32;
n33 -> n31;
n33 -> n34;
n35 -> n33;
n35 -> n36;
n37 -> n35;
n37 -> n38;
n39 -> n37;
n39 -> n40;
n41 -> n39;
n41 -> n42;
n43 -> n41;
n43 -> n44;
n45 -> n43;
n45 -> n46;
n47 -> n45;
n47 -> n48;
n49 -> n47;
n49 -> n50;
n51 -> n49;
n51 -> n52;
n53 -> n51;
n53 -> n54;
n55 -> n53;
n55 -> n56;
n57 -> n55;
n57 -> n58;
n59 -> n57;
n59 -> n60;
n61 -> n59;
n61 -> n62;
n63 -> n61;
n63 -> n64;
n68 -> n63;
n65 -> n66;
n65 -> n67;
n65 -> n68;
n70 -> n65;
n69 -> n70;
n71 -> n69;
n72 -> n71;
}