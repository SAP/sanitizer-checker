// Finding: e015e71f-7895-42f8-97c0-ae633adb9364
// Finding.url: https://example10.com/subscribe.html?%22%3E%3C/iframe%3E%3C/style%3E%3C/script%3E%3C/object%3E%3C/embed%3E%3C/textarea%3E%3Cimg%20src=x%20onerror=taintfoxLog(%27c4cbb3085e0d4e0d93286cd32a9fb8c7%27)%3E%3C!--/*?backURL[page]=/
// Finding.parentloc: https://example10.com/subscribe.html?%22%3E%3C/iframe%3E%3C/style%3E%3C/script%3E%3C/object%3E%3C/embed%3E%3C/textarea%3E%3Cimg%20src=x%20onerror=taintfoxLog(%27c4cbb3085e0d4e0d93286cd32a9fb8c7%27)%3E%3C!--/*?backURL[page]=/
// Finding.domain: example10.com
// Finding.base_domain: example10.com
// Finding.source: location.href
// Finding.sink: innerHTML
// Sanitizer.score: 2
// Sanitizer.name: urlFormat
// Sanitizer.location: https://webst.example10.com/_js/router.js?9fa8027c1abe861a0528 - urlFormat:1:444651
// Finding.begin: 3866
// Finding.end: 3966
// Finding.original_uuid: a2175210-f7bf-4433-8356-9cc0920a7437
// Finding.TwentyFiveMillionFlowsId: 271399420
// Finding.script: https://webst.example10.com/_js/vendors.js?9fa8027c1abe861a0528
// Finding.line: 2
// Exploit.uuid: c4cbb308-5e0d-4e0d-9328-6cd32a9fb8c7
// Exploit.success: false
// Exploit.status: validated
// Exploit.method: C
// Exploit.type: html
// Exploit.token: attribute
// Exploit.content: href
// Exploit.quote_type: "
// Exploit.tag: a
// Exploit.break_out: "></iframe></style></script></object></embed></textarea><img src=x onerror=
// Exploit.break_in: ><!--/*
// Exploit.payload: "></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog(1)><!--/*
// Exploit.begin_taint_url: 25
// Exploit.end_taint_url: 40
// Exploit.replace_begin_url: 41
// Exploit.replace_end_url: 40
// Exploit.replace_begin_param: 276
// Exploit.replace_end_param: 276
// Issues.LargestEncodeAttrStringChain: 0
// Issues.LargestTextFragmentEncodeChainLength: 0
// Issues.HasApproximation: false
// Issues.HasMissingImplementation: false
// Issues.HasInfiniteRegexWithFunctionReplacer: false
// Issues.MergedSplitAndJoins: false
// Issues.HasUrlInRhsOfReplace: false
// Issues.HasUrlInLhsOfReplace: false
// Issues.HasCookieValueInLhsOfreplace: false
// Issues.HasCookieValueInRhsOfreplace: false
// Issues.HasCookieValueInMatchPattern: false
// Issues.HasCookieValueInExecPattern: false
// Issues.RemovedLRConcats: true
// Issues.RemovedReplaceArtifacts: false
// Issues.HasUrlInMatchPattern: false
// Issues.HasUrlInExecPattern: false
// Issues.RemovedNOPreplaces: false
// Issues.Known_sanitizer: false
// DepGraph.hash: 817836967
// DepGraph.sanitizer_hash: -94105190
// Removed LR concats 
digraph cfg {
n0 [shape=house, label="Input: x"];
n1 [shape=ellipse, label="preg_replace"];
n2 [shape=box, label="RegExp: /\\/"];
n3 [shape=box, label="Lit: /"];
n4 [shape=box, label="Var: x"];
n5 [shape=ellipse, label="trim"];
n6 [shape=box, label="Var: x"];
n7 [shape=ellipse, label="substr"];
n8 [shape=box, label="Var: x"];
n9 [shape=box, label="Lit: 6"];
n10 [shape=ellipse, label="substr"];
n11 [shape=box, label="Var: x"];
n12 [shape=box, label="Lit: 2"];
n13 [shape=ellipse, label="substr"];
n14 [shape=box, label="Var: x"];
n15 [shape=box, label="Lit: 17"];
n16 [shape=ellipse, label="substr"];
n17 [shape=box, label="Var: x"];
n18 [shape=box, label="Lit: 16"];
n19 [shape=ellipse, label="preg_replace"];
n20 [shape=box, label="RegExp: /\+/"];
n21 [shape=box, label="Lit: %20"];
n22 [shape=box, label="Var: x"];
n23 [shape=ellipse, label="substr"];
n24 [shape=box, label="Var: x"];
n25 [shape=box, label="Lit: 97"];
n26 [shape=ellipse, label="decodeURIComponent"];
n27 [shape=box, label="Var: x"];
n28 [shape=ellipse, label="encodeURIComponent"];
n29 [shape=box, label="Var: x"];
n30 [shape=ellipse, label="."];
n31 [shape=box, label="Lit: %22%3E%3C%2Fiframe%3E%3C%2Fstyle%3E%3C%2Fscript%3E%3C%2Fobject%3E%3C%2Fembed%3E%3C%2Ftextarea%3E%3Cimg%20src="];
n32 [shape=ellipse, label="."];
n33 [shape=box, label="Lit: ?"];
n34 [shape=ellipse, label="str_replace_once"];
n35 [shape=box, label="Lit: #"];
n36 [shape=box, label="Lit: %23"];
n37 [shape=box, label="Var: x"];
n38 [shape=ellipse, label="preg_replace"];
n39 [shape=box, label="RegExp: /=((&)|$)/"];
n40 [shape=box, label="Lit: $2"];
n41 [shape=box, label="Var: x"];
n42 [shape=box, label="Var: x"];
n43 [shape=doubleoctagon, label="Return: x"];
n4 -> n0;
n1 -> n2;
n1 -> n3;
n1 -> n4;
n6 -> n1;
n5 -> n6;
n8 -> n5;
n7 -> n8;
n7 -> n9;
n11 -> n7;
n10 -> n11;
n10 -> n12;
n14 -> n10;
n13 -> n14;
n13 -> n15;
n17 -> n13;
n16 -> n17;
n16 -> n18;
n22 -> n16;
n19 -> n20;
n19 -> n21;
n19 -> n22;
n24 -> n19;
n23 -> n24;
n23 -> n25;
n27 -> n23;
n26 -> n27;
n29 -> n26;
n28 -> n29;
n30 -> n31;
n30 -> n28;
n32 -> n33;
n32 -> n30;
n37 -> n32;
n34 -> n35;
n34 -> n36;
n34 -> n37;
n41 -> n34;
n38 -> n39;
n38 -> n40;
n38 -> n41;
n42 -> n38;
n43 -> n42;
}