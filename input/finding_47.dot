// Finding: 9f793d21-45b7-44a7-98a0-495b606f8a39
// Finding.url: https://www.exampleexample372.com/us/en/solutions/service-provider/?#?#"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('6a6b14aa0c4f44d79936e22ff37dbe76')><!--/*
// Finding.parentloc: https://www.exampleexample372.com/us/en/solutions/service-provider/?#?#"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('6a6b14aa0c4f44d79936e22ff37dbe76')><!--/*
// Finding.domain: www.exampleexample372.com
// Finding.base_domain: exampleexample372.com
// Finding.source: location.href
// Finding.sink: insertAdjacentHTML
// Sanitizer.score: 7
// Sanitizer.name: b
// Sanitizer.location: https://cdn.example20.com/be_ixf_js_sdk.js - b:1:17139
// Finding.begin: 556
// Finding.end: 559
// Finding.original_uuid: f686db19-3bed-4f73-b897-554c9e236e6a
// Finding.TwentyFiveMillionFlowsId: 1103049827
// Finding.script: https://cdn.example20.com/be_ixf_js_sdk.js
// Finding.line: 1
// Exploit.uuid: 6a6b14aa-0c4f-44d7-9936-e22ff37dbe76
// Exploit.success: false
// Exploit.status: validated
// Exploit.method: C
// Exploit.type: html
// Exploit.token: attribute
// Exploit.content: content
// Exploit.quote_type: "
// Exploit.tag: meta
// Exploit.break_out: ?#"></iframe></style></script></object></embed></textarea><img src=x onerror=
// Exploit.break_in: ><!--/*
// Exploit.payload: ?#"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog(1)><!--/*
// Exploit.begin_taint_url: 0
// Exploit.end_taint_url: 58
// Exploit.replace_begin_url: 58
// Exploit.replace_end_url: 58
// Exploit.replace_begin_param: 311
// Exploit.replace_end_param: 312
// Issues.LargestEncodeAttrStringChain: 0
// Issues.LargestTextFragmentEncodeChainLength: 0
// Issues.HasApproximation: false
// Issues.HasMissingImplementation: false
// Issues.HasInfiniteRegexWithFunctionReplacer: false
// Issues.MergedSplitAndJoins: false
// Issues.HasUrlInRhsOfReplace: false
// Issues.HasUrlInLhsOfReplace: false
// Issues.HasCookieValueInLhsOfreplace: false
// Issues.HasCookieValueInRhsOfreplace: false
// Issues.HasCookieValueInMatchPattern: false
// Issues.HasCookieValueInExecPattern: false
// Issues.RemovedLRConcats: true
// Issues.RemovedReplaceArtifacts: false
// Issues.HasUrlInMatchPattern: false
// Issues.HasUrlInExecPattern: false
// Issues.RemovedNOPreplaces: false
// Issues.Known_sanitizer: false
// DepGraph.hash: 1937216213
// DepGraph.sanitizer_hash: -1966454428
// Removed LR concats 
// Removed LR concats 
// Removed LR concats 
// Removed LR concats 
digraph cfg {
n0 [shape=house, label="Input: x"];
n1 [shape=ellipse, label="split"];
n2 [shape=box, label="Lit: ?"];
n3 [shape=box, label="Var: x"];
n4 [shape=ellipse, label="preg_replace"];
n5 [shape=box, label="RegExp: /\\/"];
n6 [shape=box, label="Lit: /"];
n7 [shape=box, label="Var: x"];
n8 [shape=ellipse, label="."];
n9 [shape=box, label="Lit: ?"];
n10 [shape=ellipse, label="."];
n11 [shape=box, label="Lit: ?"];
n12 [shape=ellipse, label="str_replace_once"];
n13 [shape=box, label="RegExp: /^[	\n\r   ᠎             　\u2028\u2029﻿][	\n\r   ᠎             　\u2028\u2029﻿]*/"];
n14 [shape=box, label="Lit: "];
n15 [shape=box, label="Var: x"];
n16 [shape=ellipse, label="str_replace_once"];
n17 [shape=box, label="RegExp: /[	\n\r   ᠎             　\u2028\u2029﻿][	\n\r   ᠎             　\u2028\u2029﻿]*$/"];
n18 [shape=box, label="Lit: "];
n19 [shape=box, label="Var: x"];
n20 [shape=ellipse, label="substr"];
n21 [shape=box, label="Var: x"];
n22 [shape=box, label="Lit: 6"];
n23 [shape=ellipse, label="substr"];
n24 [shape=box, label="Var: x"];
n25 [shape=box, label="Lit: 2"];
n26 [shape=ellipse, label="substr"];
n27 [shape=box, label="Var: x"];
n28 [shape=box, label="Lit: 0"];
n29 [shape=box, label="Lit: 15"];
n30 [shape=ellipse, label="strtolower"];
n31 [shape=box, label="Var: x"];
n32 [shape=ellipse, label="preg_replace"];
n33 [shape=box, label="RegExp: /[\x2E\u3002\uFF0E\uFF61]/"];
n34 [shape=box, label="Lit: ."];
n35 [shape=box, label="Var: x"];
n36 [shape=ellipse, label="split"];
n37 [shape=box, label="Lit: ."];
n38 [shape=box, label="Var: x"];
n39 [shape=ellipse, label="."];
n40 [shape=box, label="Lit: ."];
n41 [shape=ellipse, label="."];
n42 [shape=box, label="Lit: ."];
n43 [shape=ellipse, label="preg_replace"];
n44 [shape=box, label="RegExp: /[&]/"];
n45 [shape=box, label="Lit: &amp;"];
n46 [shape=box, label="Var: x"];
n47 [shape=ellipse, label="preg_replace"];
n48 [shape=box, label="RegExp: /[<]/"];
n49 [shape=box, label="Lit: &lt;"];
n50 [shape=box, label="Var: x"];
n51 [shape=ellipse, label="preg_replace"];
n52 [shape=box, label="RegExp: /[>]/"];
n53 [shape=box, label="Lit: &gt;"];
n54 [shape=box, label="Var: x"];
n55 [shape=ellipse, label="preg_replace"];
n56 [shape=box, label="RegExp: /["]/"];
n57 [shape=box, label="Lit: &quot;"];
n58 [shape=box, label="Var: x"];
n59 [shape=ellipse, label="."];
n60 [shape=box, label="Lit: \n<meta name="be:norm_url" content=""];
n61 [shape=ellipse, label="."];
n62 [shape=box, label="Lit: " />"];
n63 [shape=ellipse, label="."];
n64 [shape=box, label="Lit: \n<meta name="be:capsule_url" content="https://ixf2-api.example20.com/api/ixf/1.0.0/get_capsule/f00000000063367/232546093" />"];
n65 [shape=ellipse, label="."];
n66 [shape=box, label="Lit: \n<meta name="be:api_dt" content="py_2021; pm_04; pd_21; ph_19; pmh_40; p_epoch:1619059221101" />"];
n67 [shape=ellipse, label="."];
n68 [shape=box, label="Lit: \n<meta name="be:mod_dt" content="py_2021; pm_04; pd_21; ph_19; pmh_40; p_epoch:1619059221101" />"];
n69 [shape=ellipse, label="."];
n70 [shape=box, label="Lit: \n<meta name="be:messages" content="true" />"];
n71 [shape=box, label="Var: x"];
n72 [shape=doubleoctagon, label="Return: x"];
n3 -> n0;
n1 -> n2;
n1 -> n3;
n7 -> n1;
n4 -> n5;
n4 -> n6;
n4 -> n7;
n8 -> n9;
n8 -> n4;
n10 -> n8;
n10 -> n11;
n15 -> n10;
n12 -> n13;
n12 -> n14;
n12 -> n15;
n19 -> n12;
n16 -> n17;
n16 -> n18;
n16 -> n19;
n21 -> n16;
n20 -> n21;
n20 -> n22;
n24 -> n20;
n23 -> n24;
n23 -> n25;
n27 -> n23;
n26 -> n27;
n26 -> n28;
n26 -> n29;
n31 -> n26;
n30 -> n31;
n35 -> n30;
n32 -> n33;
n32 -> n34;
n32 -> n35;
n38 -> n32;
n36 -> n37;
n36 -> n38;
n39 -> n40;
n39 -> n36;
n41 -> n39;
n41 -> n42;
n46 -> n41;
n43 -> n44;
n43 -> n45;
n43 -> n46;
n50 -> n43;
n47 -> n48;
n47 -> n49;
n47 -> n50;
n54 -> n47;
n51 -> n52;
n51 -> n53;
n51 -> n54;
n58 -> n51;
n55 -> n56;
n55 -> n57;
n55 -> n58;
n59 -> n60;
n59 -> n55;
n61 -> n59;
n61 -> n62;
n63 -> n61;
n63 -> n64;
n65 -> n63;
n65 -> n66;
n67 -> n65;
n67 -> n68;
n69 -> n67;
n69 -> n70;
n71 -> n69;
n72 -> n71;
}