// Finding: d5c7e04e-5e36-4988-81cd-b42cdb746b26
// Finding.url: https://events.example200.com/#!view/event/event_id/89873##</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('48985c75e95649b1b0a79f21d8e4349f')><!--/*
// Finding.parentloc: https://events.example200.com/#!view/event/event_id/89873##</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('48985c75e95649b1b0a79f21d8e4349f')><!--/*
// Finding.domain: events.example200.com
// Finding.base_domain: example200.com
// Finding.source: location.href
// Finding.sink: innerHTML
// Sanitizer.score: 6
// Sanitizer.name: sanitizeVar
// Sanitizer.location: https://events.example200.com/live/resource/js/livewhale/theme/core/scripts/calendar.rev.1537309365.js - sanitizeVar:7:9780
// Finding.begin: 5060
// Finding.end: 5065
// Finding.original_uuid: 71d17ba5-5d6f-428d-a4ec-be7b6056c124
// Finding.TwentyFiveMillionFlowsId: -1774643860
// Finding.script: https://events.example200.com/live/resource/js/%5Clivewhale%5Cthirdparty%5Cfrontend.min.js/%5Clivewhale%5Cscripts%5Clwui%5Cfrontend.js/%5Clivewhale%5Cscripts%5Ccommon.rev.1528626687.js
// Finding.line: 8
// Exploit.uuid: 48985c75-e956-49b1-b0a7-9f21d8e4349f
// Exploit.success: false
// Exploit.status: validated
// Exploit.method: C
// Exploit.type: html
// Exploit.token: text
// Exploit.content: t
// Exploit.quote_type: None
// Exploit.tag: None
// Exploit.break_out: #</iframe></style></script></object></embed></textarea><img src=x onerror=
// Exploit.break_in: ><!--/*
// Exploit.payload: #</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog(1)><!--/*
// Exploit.begin_taint_url: 8
// Exploit.end_taint_url: 13
// Exploit.replace_begin_url: 55
// Exploit.replace_end_url: 55
// Exploit.replace_begin_param: 8
// Exploit.replace_end_param: 8
// Issues.LargestEncodeAttrStringChain: 0
// Issues.LargestTextFragmentEncodeChainLength: 0
// Issues.HasApproximation: false
// Issues.HasMissingImplementation: false
// Issues.HasInfiniteRegexWithFunctionReplacer: false
// Issues.MergedSplitAndJoins: false
// Issues.HasUrlInRhsOfReplace: false
// Issues.HasUrlInLhsOfReplace: false
// Issues.HasCookieValueInLhsOfreplace: false
// Issues.HasCookieValueInRhsOfreplace: false
// Issues.HasCookieValueInMatchPattern: false
// Issues.HasCookieValueInExecPattern: false
// Issues.RemovedLRConcats: false
// Issues.RemovedReplaceArtifacts: false
// Issues.HasUrlInMatchPattern: false
// Issues.HasUrlInExecPattern: false
// Issues.RemovedNOPreplaces: false
// Issues.Known_sanitizer: false
// DepGraph.hash: -200305783
// DepGraph.sanitizer_hash: -1313640504

digraph cfg {
n0 [shape=house, label="Input: x"];
n1 [shape=ellipse, label="split"];
n2 [shape=box, label="Lit: #"];
n3 [shape=box, label="Var: x"];
n4 [shape=ellipse, label="str_replace_once"];
n5 [shape=box, label="RegExp: /^!/"];
n6 [shape=box, label="Lit: "];
n7 [shape=box, label="Var: x"];
n8 [shape=ellipse, label="split"];
n9 [shape=box, label="Lit: /"];
n10 [shape=box, label="Var: x"];
n11 [shape=ellipse, label="decodeURIComponent"];
n12 [shape=box, label="Var: x"];
n13 [shape=ellipse, label="preg_replace"];
n14 [shape=box, label="RegExp: /[<]/"];
n15 [shape=box, label="Lit: &lt;"];
n16 [shape=box, label="Var: x"];
n17 [shape=ellipse, label="preg_replace"];
n18 [shape=box, label="RegExp: /[>]/"];
n19 [shape=box, label="Lit: &gt;"];
n20 [shape=box, label="Var: x"];
n21 [shape=ellipse, label="."];
n22 [shape=box, label="Lit: <p>"];
n23 [shape=ellipse, label="."];
n24 [shape=box, label="Lit: </p>"];
n25 [shape=ellipse, label="preg_replace"];
n26 [shape=box, label="RegExp: /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/"];
n27 [shape=box, label="Lit: "];
n28 [shape=box, label="Var: x"];
n29 [shape=ellipse, label="regex_exec"];
n30 [shape=box, label="RegExp: /^([^<]*)(<[\w\W]+>)([^>]*)$/"];
n31 [shape=box, label="Lit: 2"];
n32 [shape=box, label="Var: x"];
n33 [shape=ellipse, label="preg_replace"];
n34 [shape=box, label="RegExp: /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/"];
n35 [shape=box, label="Lit: <$1></$2>"];
n36 [shape=box, label="Var: x"];
n37 [shape=ellipse, label="preg_replace"];
n38 [shape=box, label="RegExp: /[>]/"];
n39 [shape=box, label="Lit: &gt;"];
n40 [shape=box, label="Var: x"];
n41 [shape=ellipse, label="preg_replace"];
n42 [shape=box, label="RegExp: /[<]/"];
n43 [shape=box, label="Lit: &lt;"];
n44 [shape=box, label="Var: x"];
n45 [shape=ellipse, label="preg_replace"];
n46 [shape=box, label="RegExp: /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/"];
n47 [shape=box, label="Lit: "];
n48 [shape=box, label="Var: x"];
n49 [shape=box, label="Var: x"];
n50 [shape=doubleoctagon, label="Return: x"];
n3 -> n0;
n1 -> n2;
n1 -> n3;
n7 -> n1;
n4 -> n5;
n4 -> n6;
n4 -> n7;
n10 -> n4;
n8 -> n9;
n8 -> n10;
n12 -> n8;
n11 -> n12;
n16 -> n11;
n13 -> n14;
n13 -> n15;
n13 -> n16;
n20 -> n13;
n17 -> n18;
n17 -> n19;
n17 -> n20;
n21 -> n22;
n21 -> n17;
n23 -> n21;
n23 -> n24;
n28 -> n23;
n25 -> n26;
n25 -> n27;
n25 -> n28;
n32 -> n25;
n29 -> n30;
n29 -> n31;
n29 -> n32;
n36 -> n29;
n33 -> n34;
n33 -> n35;
n33 -> n36;
n40 -> n33;
n37 -> n38;
n37 -> n39;
n37 -> n40;
n44 -> n37;
n41 -> n42;
n41 -> n43;
n41 -> n44;
n48 -> n41;
n45 -> n46;
n45 -> n47;
n45 -> n48;
n49 -> n45;
n50 -> n49;
}