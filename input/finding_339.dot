// Finding: 9a8f8045-9f71-4c82-92b1-92e8bd334348
// Finding.url: https://www.example251.com/service/tree_list.do##</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('84d4d6fcc09c4d5b84f0099f2b0d9142')><!--/*
// Finding.parentloc: https://www.example251.com/service/tree_list.do##</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('84d4d6fcc09c4d5b84f0099f2b0d9142')><!--/*
// Finding.domain: www.example251.com
// Finding.base_domain: example251.com
// Finding.source: location.href
// Finding.sink: innerHTML
// Sanitizer.score: 5
// Sanitizer.name: k
// Sanitizer.location: https://www.example251.com/js/template-14e8bb29275ab9349e3763d31ef3bcec.js;jsessionid=C7A1BC5002812C11ADA069BF1A9840D6 line 2 > Function - anonymous:10:6
// Finding.begin: 993
// Finding.end: 994
// Finding.original_uuid: b315c7df-df93-4b75-a300-afbff7fb0709
// Finding.TwentyFiveMillionFlowsId: 1472800225
// Finding.script: https://static.example251.com/product/medsci-site/portal/js/jquery-latest.min.js
// Finding.line: 4
// Exploit.uuid: 84d4d6fc-c09c-4d5b-84f0-099f2b0d9142
// Exploit.success: false
// Exploit.status: validated
// Exploit.method: C
// Exploit.type: html
// Exploit.token: comment
// Exploit.content: <li><a href="/login?redirect_uri=https://www.example251.com/service/tree_list.do" class="ms-link">登录</a></li>
// Exploit.quote_type: None
// Exploit.tag: None
// Exploit.break_out: #</iframe></style></script></object></embed></textarea><img src=x onerror=
// Exploit.break_in: ><!--/*
// Exploit.payload: #</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog(1)><!--/*
// Exploit.begin_taint_url: 0
// Exploit.end_taint_url: 42
// Exploit.replace_begin_url: 42
// Exploit.replace_end_url: 42
// Exploit.replace_begin_param: 117
// Exploit.replace_end_param: 117
// Issues.LargestEncodeAttrStringChain: 0
// Issues.LargestTextFragmentEncodeChainLength: 0
// Issues.HasApproximation: true
// Issues.HasMissingImplementation: false
// Issues.HasInfiniteRegexWithFunctionReplacer: true
// Issues.MergedSplitAndJoins: false
// Issues.HasUrlInRhsOfReplace: false
// Issues.HasUrlInLhsOfReplace: false
// Issues.HasCookieValueInLhsOfreplace: false
// Issues.HasCookieValueInRhsOfreplace: false
// Issues.HasCookieValueInMatchPattern: false
// Issues.HasCookieValueInExecPattern: false
// Issues.RemovedLRConcats: true
// Issues.RemovedReplaceArtifacts: false
// Issues.HasUrlInMatchPattern: false
// Issues.HasUrlInExecPattern: false
// Issues.RemovedNOPreplaces: false
// Issues.Known_sanitizer: false
// DepGraph.hash: 522104358
// DepGraph.sanitizer_hash: 1190629924
// Removed LR concats 
// Removed LR concats 
// Non Finite Regex with function on rhs:  replace(&(?![\w#]+;)|[<>"']/g: 1, s: 0, u: 0, m: 0, i: 0 [escapes(<: 1, >: 1, &: 1, ": 1, ': 1), function_rhs: true], 'function(a){return i[a]}') - Left hand side has to be a range 
// Approximated Implementation for:  replace(&(?![\w#]+;)|[<>"']/g: 1, s: 0, u: 0, m: 0, i: 0 [escapes(<: 1, >: 1, &: 1, ": 1, ': 1), function_rhs: true], 'function(a){return i[a]}') - Left hand side has to be a range 
digraph cfg {
n0 [shape=house, label="Input: x"];
n1 [shape=ellipse, label="."];
n2 [shape=box, label="Lit: &#62;"];
n3 [shape=ellipse, label="."];
n4 [shape=box, label="Lit: &#60;"];
n5 [shape=ellipse, label="preg_replace"];
n6 [shape=box, label="RegExp: /&(?![\w#]+;)|[<>"']/"];
n7 [shape=box, label="Lit: "];
n8 [shape=box, label="Var: x"];
n9 [shape=box, label="Var: x"];
n10 [shape=doubleoctagon, label="Return: x"];
n1 -> n0;
n1 -> n2;
n3 -> n1;
n3 -> n4;
n8 -> n3;
n5 -> n6;
n5 -> n7;
n5 -> n8;
n9 -> n5;
n10 -> n9;
}