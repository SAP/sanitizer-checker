// Finding: e27956f8-e3ad-4301-a47d-2d09bc08c984
// Finding.url: https://da.example10.com/##"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('2c04ff13fcaa42db8944d5b3ebc10f50')><!--/*
// Finding.parentloc: https://da.example10.com/##"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('2c04ff13fcaa42db8944d5b3ebc10f50')><!--/*
// Finding.domain: da.example10.com
// Finding.base_domain: example10.com
// Finding.source: location.href
// Finding.sink: innerHTML
// Sanitizer.score: 6
// Sanitizer.name: urlFormat
// Sanitizer.location: https://webst.example10.com/_js/router.js?9fa8027c1abe861a0528 - urlFormat:1:444651
// Finding.begin: 2048
// Finding.end: 2053
// Finding.original_uuid: 44d52b15-c040-4ed7-82ed-e724514e4847
// Finding.TwentyFiveMillionFlowsId: 1429751567
// Finding.script: https://webst.example10.com/_js/vendors.js?9fa8027c1abe861a0528
// Finding.line: 2
// Exploit.uuid: 2c04ff13-fcaa-42db-8944-d5b3ebc10f50
// Exploit.success: false
// Exploit.status: validated
// Exploit.method: C
// Exploit.type: html
// Exploit.token: attribute
// Exploit.content: href
// Exploit.quote_type: "
// Exploit.tag: a
// Exploit.break_out: #"></iframe></style></script></object></embed></textarea><img src=x onerror=
// Exploit.break_in: ><!--/*
// Exploit.payload: #"></iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog(1)><!--/*
// Exploit.begin_taint_url: 6
// Exploit.end_taint_url: 7
// Exploit.replace_begin_url: 29
// Exploit.replace_end_url: 29
// Exploit.replace_begin_param: 154
// Exploit.replace_end_param: 154
// Issues.LargestEncodeAttrStringChain: 0
// Issues.LargestTextFragmentEncodeChainLength: 0
// Issues.HasApproximation: false
// Issues.HasMissingImplementation: false
// Issues.HasInfiniteRegexWithFunctionReplacer: false
// Issues.MergedSplitAndJoins: true
// Issues.HasUrlInRhsOfReplace: false
// Issues.HasUrlInLhsOfReplace: false
// Issues.HasCookieValueInLhsOfreplace: false
// Issues.HasCookieValueInRhsOfreplace: false
// Issues.HasCookieValueInMatchPattern: false
// Issues.HasCookieValueInExecPattern: false
// Issues.RemovedLRConcats: true
// Issues.RemovedReplaceArtifacts: false
// Issues.HasUrlInMatchPattern: false
// Issues.HasUrlInExecPattern: false
// Issues.RemovedNOPreplaces: false
// Issues.Known_sanitizer: false
// DepGraph.hash: -298207662
// DepGraph.sanitizer_hash: -1069250742
// Merged split and join statements 
// Merged split and join statements 
// Merged split and join statements 
// Merged split and join statements 
// Merged split and join statements 
// Merged split and join statements 
// Removed LR concats 
digraph cfg {
n0 [shape=house, label="Input: x"];
n1 [shape=ellipse, label="preg_replace"];
n2 [shape=box, label="RegExp: /[#]/"];
n3 [shape=box, label="Lit: #"];
n4 [shape=box, label="Var: x"];
n5 [shape=ellipse, label="trim"];
n6 [shape=box, label="Var: x"];
n7 [shape=ellipse, label="substr"];
n8 [shape=box, label="Var: x"];
n9 [shape=box, label="Lit: 6"];
n10 [shape=ellipse, label="substr"];
n11 [shape=box, label="Var: x"];
n12 [shape=box, label="Lit: 2"];
n13 [shape=ellipse, label="substr"];
n14 [shape=box, label="Var: x"];
n15 [shape=box, label="Lit: 20"];
n16 [shape=ellipse, label="preg_replace"];
n17 [shape=box, label="RegExp: /[']/"];
n18 [shape=box, label="Lit: %27"];
n19 [shape=box, label="Var: x"];
n20 [shape=ellipse, label="preg_replace"];
n21 [shape=box, label="RegExp: /[<]/"];
n22 [shape=box, label="Lit: %3C"];
n23 [shape=box, label="Var: x"];
n24 [shape=ellipse, label="preg_replace"];
n25 [shape=box, label="RegExp: /[>]/"];
n26 [shape=box, label="Lit: %3E"];
n27 [shape=box, label="Var: x"];
n28 [shape=ellipse, label="preg_replace"];
n29 [shape=box, label="RegExp: /["]/"];
n30 [shape=box, label="Lit: %22"];
n31 [shape=box, label="Var: x"];
n32 [shape=ellipse, label="preg_replace"];
n33 [shape=box, label="RegExp: /[ ]/"];
n34 [shape=box, label="Lit: %20"];
n35 [shape=box, label="Var: x"];
n36 [shape=ellipse, label="substr"];
n37 [shape=box, label="Var: x"];
n38 [shape=box, label="Lit: 1"];
n39 [shape=ellipse, label="preg_replace"];
n40 [shape=box, label="RegExp: /=((&)|$)/"];
n41 [shape=box, label="Lit: $2"];
n42 [shape=box, label="Var: x"];
n43 [shape=box, label="Var: x"];
n44 [shape=doubleoctagon, label="Return: x"];
n4 -> n0;
n1 -> n2;
n1 -> n3;
n1 -> n4;
n6 -> n1;
n5 -> n6;
n8 -> n5;
n7 -> n8;
n7 -> n9;
n11 -> n7;
n10 -> n11;
n10 -> n12;
n14 -> n10;
n13 -> n14;
n13 -> n15;
n19 -> n13;
n16 -> n17;
n16 -> n18;
n16 -> n19;
n23 -> n16;
n20 -> n21;
n20 -> n22;
n20 -> n23;
n27 -> n20;
n24 -> n25;
n24 -> n26;
n24 -> n27;
n31 -> n24;
n28 -> n29;
n28 -> n30;
n28 -> n31;
n35 -> n28;
n32 -> n33;
n32 -> n34;
n32 -> n35;
n37 -> n32;
n36 -> n37;
n36 -> n38;
n42 -> n36;
n39 -> n40;
n39 -> n41;
n39 -> n42;
n43 -> n39;
n44 -> n43;
}