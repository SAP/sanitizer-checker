// Finding: 42fba3a7-4ff6-40e0-8ac3-93d20822f864
// Finding.url: https://example12.com/terms##</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('1ed83216ef0948a0937f7b486ce99cdc')><!--/*
// Finding.parentloc: https://example12.com/terms##</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('1ed83216ef0948a0937f7b486ce99cdc')><!--/*
// Finding.domain: example12.com
// Finding.base_domain: example12.com
// Finding.source: location.href
// Finding.sink: innerHTML
// Sanitizer.score: 2
// Sanitizer.name: [127]</s.Location</e.prototype.parsed_url
// Sanitizer.location: https://example13.com/package/run_js/17a22aa6ad5fba0290417139214bcf1ede4631cc1609b894c3b6e6ecff4a0a3e/xfalse/x12 - [127]</s.Location</e.prototype.parsed_url:8:875723
// Finding.begin: 23794
// Finding.end: 23800
// Finding.original_uuid: 10ad016e-5639-483b-831e-0d8ac7ee1c05
// Finding.TwentyFiveMillionFlowsId: -1175349165
// Finding.script: https://example13.com/package/run_js/17a22aa6ad5fba0290417139214bcf1ede4631cc1609b894c3b6e6ecff4a0a3e/xfalse/x12
// Finding.line: 5
// Exploit.uuid: 1ed83216-ef09-48a0-937f-7b486ce99cdc
// Exploit.success: false
// Exploit.status: validated
// Exploit.method: C
// Exploit.type: html
// Exploit.token: text
// Exploit.content: :
// Exploit.quote_type: None
// Exploit.tag: None
// Exploit.break_out: #</iframe></style></script></object></embed></textarea><img src=x onerror=
// Exploit.break_in: ><!--/*
// Exploit.payload: #</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog(1)><!--/*
// Exploit.begin_taint_url: 0
// Exploit.end_taint_url: 6
// Exploit.replace_begin_url: 23
// Exploit.replace_end_url: 23
// Exploit.replace_begin_param: 23854
// Exploit.replace_end_param: 23854
// Issues.LargestEncodeAttrStringChain: 0
// Issues.LargestTextFragmentEncodeChainLength: 0
// Issues.HasApproximation: false
// Issues.HasMissingImplementation: false
// Issues.HasInfiniteRegexWithFunctionReplacer: false
// Issues.MergedSplitAndJoins: false
// Issues.HasUrlInRhsOfReplace: false
// Issues.HasUrlInLhsOfReplace: false
// Issues.HasCookieValueInLhsOfreplace: false
// Issues.HasCookieValueInRhsOfreplace: false
// Issues.HasCookieValueInMatchPattern: false
// Issues.HasCookieValueInExecPattern: false
// Issues.RemovedLRConcats: true
// Issues.RemovedReplaceArtifacts: false
// Issues.HasUrlInMatchPattern: false
// Issues.HasUrlInExecPattern: false
// Issues.RemovedNOPreplaces: false
// Issues.Known_sanitizer: false
// DepGraph.hash: 882696109
// DepGraph.sanitizer_hash: -1703942392
// Removed LR concats 
// Removed LR concats 
// Removed LR concats 
digraph cfg {
n0 [shape=house, label="Input: x"];
n1 [shape=ellipse, label="split"];
n2 [shape=box, label="Lit: #"];
n3 [shape=box, label="Var: x"];
n4 [shape=ellipse, label="preg_replace"];
n5 [shape=box, label="RegExp: /\\/"];
n6 [shape=box, label="Lit: /"];
n7 [shape=box, label="Var: x"];
n8 [shape=ellipse, label="."];
n9 [shape=box, label="Lit: #"];
n10 [shape=ellipse, label="."];
n11 [shape=box, label="Lit: #"];
n12 [shape=ellipse, label="trim"];
n13 [shape=box, label="Var: x"];
n14 [shape=ellipse, label="regex_exec"];
n15 [shape=box, label="RegExp: /^([a-z0-9.+-]+:)/"];
n16 [shape=box, label="Lit: 0"];
n17 [shape=box, label="Var: x"];
n18 [shape=ellipse, label="strtolower"];
n19 [shape=box, label="Var: x"];
n20 [shape=ellipse, label="split"];
n21 [shape=box, label="Lit: #"];
n22 [shape=box, label="Var: x"];
n23 [shape=ellipse, label="preg_replace"];
n24 [shape=box, label="RegExp: /\\/"];
n25 [shape=box, label="Lit: /"];
n26 [shape=box, label="Var: x"];
n27 [shape=ellipse, label="."];
n28 [shape=box, label="Lit: #"];
n29 [shape=ellipse, label="."];
n30 [shape=box, label="Lit: #"];
n31 [shape=ellipse, label="trim"];
n32 [shape=box, label="Var: x"];
n33 [shape=ellipse, label="regex_exec"];
n34 [shape=box, label="RegExp: /^([a-z0-9.+-]+:)/"];
n35 [shape=box, label="Lit: 0"];
n36 [shape=box, label="Var: x"];
n37 [shape=ellipse, label="strtolower"];
n38 [shape=box, label="Var: x"];
n39 [shape=box, label="Var: x"];
n40 [shape=doubleoctagon, label="Return: x"];
n3 -> n0;
n1 -> n2;
n1 -> n3;
n7 -> n1;
n4 -> n5;
n4 -> n6;
n4 -> n7;
n8 -> n9;
n8 -> n4;
n10 -> n8;
n10 -> n11;
n13 -> n10;
n12 -> n13;
n17 -> n12;
n14 -> n15;
n14 -> n16;
n14 -> n17;
n19 -> n14;
n18 -> n19;
n22 -> n18;
n20 -> n21;
n20 -> n22;
n26 -> n20;
n23 -> n24;
n23 -> n25;
n23 -> n26;
n27 -> n28;
n27 -> n23;
n29 -> n27;
n29 -> n30;
n32 -> n29;
n31 -> n32;
n36 -> n31;
n33 -> n34;
n33 -> n35;
n33 -> n36;
n38 -> n33;
n37 -> n38;
n39 -> n37;
n40 -> n39;
}